"use strict";(self.webpackChunktunit_docs_site=self.webpackChunktunit_docs_site||[]).push([[5291],{6727:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"reference/aot-configuration","title":"AOT Configuration Reference","description":"TUnit\'s AOT-only mode can be configured through EditorConfig files or MSBuild properties to control source generation behavior and optimize for your specific scenarios.","source":"@site/docs/reference/aot-configuration.md","sourceDirName":"reference","slug":"/reference/aot-configuration","permalink":"/docs/reference/aot-configuration","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var o=i(4848),r=i(8453);const s={},l="AOT Configuration Reference",c={},a=[{value:"EditorConfig Configuration",id:"editorconfig-configuration",level:2},{value:"MSBuild Configuration",id:"msbuild-configuration",level:2},{value:"Configuration Options Reference",id:"configuration-options-reference",level:2},{value:"Generic Type Resolution",id:"generic-type-resolution",level:3},{value:"<code>generic_depth_limit</code> / <code>TUnitGenericDepthLimit</code>",id:"generic_depth_limit--tunitgenericdepthlimit",level:4},{value:"<code>max_generic_instantiations</code> / <code>TUnitMaxGenericInstantiations</code>",id:"max_generic_instantiations--tunitmaxgenericinstantiations",level:4},{value:"<code>enable_auto_generic_discovery</code> / <code>TUnitEnableAutoGenericDiscovery</code>",id:"enable_auto_generic_discovery--tunitenableautogenericdiscovery",level:4},{value:"Performance and Features",id:"performance-and-features",level:3},{value:"<code>aot_only_mode</code> / <code>TUnitAotOnlyMode</code>",id:"aot_only_mode--tunitaotonlymode",level:4},{value:"<code>enable_property_injection</code> / <code>TUnitEnablePropertyInjection</code>",id:"enable_property_injection--tunitenablepropertyinjection",level:4},{value:"<code>enable_valuetask_hooks</code> / <code>TUnitEnableValueTaskHooks</code>",id:"enable_valuetask_hooks--tunitenablevaluetaskhooks",level:4},{value:"Diagnostics and Debugging",id:"diagnostics-and-debugging",level:3},{value:"<code>enable_verbose_diagnostics</code> / <code>TUnitEnableVerboseDiagnostics</code>",id:"enable_verbose_diagnostics--tunitenableverbosediagnostics",level:4},{value:"Environment-Specific Configuration",id:"environment-specific-configuration",level:2},{value:"Development Environment",id:"development-environment",level:3},{value:"Production/CI Environment",id:"productionci-environment",level:3},{value:"Native AOT Publishing",id:"native-aot-publishing",level:3},{value:"Common Configuration Patterns",id:"common-configuration-patterns",level:2},{value:"High-Performance Testing",id:"high-performance-testing",level:3},{value:"Complex Generic Testing",id:"complex-generic-testing",level:3},{value:"Minimal Code Generation",id:"minimal-code-generation",level:3},{value:"Troubleshooting Configuration",id:"troubleshooting-configuration",level:2},{value:"Compilation Time Issues",id:"compilation-time-issues",level:3},{value:"Binary Size Issues",id:"binary-size-issues",level:3},{value:"Generic Type Support Issues",id:"generic-type-support-issues",level:3},{value:"AOT Compatibility Issues",id:"aot-compatibility-issues",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"aot-configuration-reference",children:"AOT Configuration Reference"})}),"\n",(0,o.jsx)(n.p,{children:"TUnit's AOT-only mode can be configured through EditorConfig files or MSBuild properties to control source generation behavior and optimize for your specific scenarios."}),"\n",(0,o.jsx)(n.h2,{id:"editorconfig-configuration",children:"EditorConfig Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["Add TUnit configuration to your ",(0,o.jsx)(n.code,{children:".editorconfig"})," file for fine-grained control:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"# TUnit Configuration\n# For more information about TUnit configuration options, see:\n# https://github.com/thomhurst/TUnit/docs/configuration\n\n# Generic Type Resolution\n# Controls the maximum depth for generic type resolution in AOT scenarios\n# Default: 5\n# Range: 1-20\ntunit.generic_depth_limit = 5\n\n# AOT-Only Mode\n# Enforces AOT-only mode, disabling all reflection fallbacks\n# Default: true\ntunit.aot_only_mode = true\n\n# Property Injection\n# Enables dependency injection via property setters in test classes\n# Default: true\ntunit.enable_property_injection = true\n\n# ValueTask Hook Support\n# Enables ValueTask return types in hook methods for better performance\n# Default: true\ntunit.enable_valuetask_hooks = true\n\n# Verbose Diagnostics\n# Enables verbose diagnostic messages from the source generator\n# Default: false\ntunit.enable_verbose_diagnostics = false\n\n# Maximum Generic Instantiations\n# Controls the maximum number of generic instantiations per type\n# Default: 10\n# Range: 1-100\ntunit.max_generic_instantiations = 10\n\n# Automatic Generic Discovery\n# Enables automatic discovery of generic test instantiations\n# Default: true\ntunit.enable_auto_generic_discovery = true\n"})}),"\n",(0,o.jsx)(n.h2,{id:"msbuild-configuration",children:"MSBuild Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["Configure TUnit through MSBuild properties in your ",(0,o.jsx)(n.code,{children:".csproj"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n    \n    \x3c!-- TUnit AOT Configuration --\x3e\n    <TUnitAotOnlyMode>true</TUnitAotOnlyMode>\n    <TUnitGenericDepthLimit>8</TUnitGenericDepthLimit>\n    <TUnitEnablePropertyInjection>true</TUnitEnablePropertyInjection>\n    <TUnitEnableValueTaskHooks>true</TUnitEnableValueTaskHooks>\n    <TUnitEnableVerboseDiagnostics>false</TUnitEnableVerboseDiagnostics>\n    <TUnitMaxGenericInstantiations>15</TUnitMaxGenericInstantiations>\n    <TUnitEnableAutoGenericDiscovery>true</TUnitEnableAutoGenericDiscovery>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="TUnit" Version="*" />\n  </ItemGroup>\n\n</Project>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"configuration-options-reference",children:"Configuration Options Reference"}),"\n",(0,o.jsx)(n.h3,{id:"generic-type-resolution",children:"Generic Type Resolution"}),"\n",(0,o.jsxs)(n.h4,{id:"generic_depth_limit--tunitgenericdepthlimit",children:[(0,o.jsx)(n.code,{children:"generic_depth_limit"})," / ",(0,o.jsx)(n.code,{children:"TUnitGenericDepthLimit"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type"}),": Integer"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Default"}),": 5"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Range"}),": 1-20"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Description"}),": Controls how deeply nested generic types can be resolved at compile time"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Performance Impact"}),": Higher values increase compilation time but support more complex generic scenarios"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example scenarios by depth:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Depth 1"}),": ",(0,o.jsx)(n.code,{children:"List<T>"}),", ",(0,o.jsx)(n.code,{children:"Dictionary<K,V>"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Depth 3"}),": ",(0,o.jsx)(n.code,{children:"Dictionary<string, List<MyClass<T>>>"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Depth 5"}),": Complex nested generic collections with multiple type parameters"]}),"\n"]}),"\n",(0,o.jsxs)(n.h4,{id:"max_generic_instantiations--tunitmaxgenericinstantiations",children:[(0,o.jsx)(n.code,{children:"max_generic_instantiations"})," / ",(0,o.jsx)(n.code,{children:"TUnitMaxGenericInstantiations"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type"}),": Integer"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Default"}),": 10"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Range"}),": 1-100"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Description"}),": Maximum number of generic instantiations per generic type"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Performance Impact"}),": Higher values support more type combinations but increase binary size"]}),"\n"]}),"\n",(0,o.jsxs)(n.h4,{id:"enable_auto_generic_discovery--tunitenableautogenericdiscovery",children:[(0,o.jsx)(n.code,{children:"enable_auto_generic_discovery"})," / ",(0,o.jsx)(n.code,{children:"TUnitEnableAutoGenericDiscovery"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type"}),": Boolean"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Default"}),": true"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Description"}),": Automatically discover generic type usage and generate appropriate instantiations"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"When to disable"}),": For explicit control over which generic types are generated"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"performance-and-features",children:"Performance and Features"}),"\n",(0,o.jsxs)(n.h4,{id:"aot_only_mode--tunitaotonlymode",children:[(0,o.jsx)(n.code,{children:"aot_only_mode"})," / ",(0,o.jsx)(n.code,{children:"TUnitAotOnlyMode"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type"}),": Boolean"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Default"}),": true"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Description"}),": Enforces AOT-only execution, completely removing reflection fallbacks"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Benefits"}),": Better performance, smaller binary size, Native AOT compatibility"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Note"}),": Cannot be disabled in current version"]}),"\n"]}),"\n",(0,o.jsxs)(n.h4,{id:"enable_property_injection--tunitenablepropertyinjection",children:[(0,o.jsx)(n.code,{children:"enable_property_injection"})," / ",(0,o.jsx)(n.code,{children:"TUnitEnablePropertyInjection"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type"}),": Boolean"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Default"}),": true"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Description"}),": Enables compile-time property injection with dependency resolution"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"When to disable"}),": If not using property injection, can reduce generated code size"]}),"\n"]}),"\n",(0,o.jsxs)(n.h4,{id:"enable_valuetask_hooks--tunitenablevaluetaskhooks",children:[(0,o.jsx)(n.code,{children:"enable_valuetask_hooks"})," / ",(0,o.jsx)(n.code,{children:"TUnitEnableValueTaskHooks"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type"}),": Boolean"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Default"}),": true"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Description"}),": Supports ValueTask return types in hook methods for reduced allocations"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Performance Impact"}),": ValueTask provides better performance for frequently-executed hooks"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"diagnostics-and-debugging",children:"Diagnostics and Debugging"}),"\n",(0,o.jsxs)(n.h4,{id:"enable_verbose_diagnostics--tunitenableverbosediagnostics",children:[(0,o.jsx)(n.code,{children:"enable_verbose_diagnostics"})," / ",(0,o.jsx)(n.code,{children:"TUnitEnableVerboseDiagnostics"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type"}),": Boolean"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Description"}),": Enables detailed diagnostic messages during source generation"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Use cases"}),": Debugging source generation issues, understanding compilation behavior"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Performance Impact"}),": Increases compilation time and log verbosity"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"environment-specific-configuration",children:"Environment-Specific Configuration"}),"\n",(0,o.jsx)(n.h3,{id:"development-environment",children:"Development Environment"}),"\n",(0,o.jsx)(n.p,{children:"Optimize for faster builds and better debugging:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"# Development settings - faster builds\ntunit.generic_depth_limit = 3\ntunit.max_generic_instantiations = 5\ntunit.enable_verbose_diagnostics = true\n"})}),"\n",(0,o.jsx)(n.h3,{id:"productionci-environment",children:"Production/CI Environment"}),"\n",(0,o.jsx)(n.p,{children:"Optimize for performance and completeness:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"# Production settings - full optimization\ntunit.generic_depth_limit = 10\ntunit.max_generic_instantiations = 20\ntunit.enable_verbose_diagnostics = false\n"})}),"\n",(0,o.jsx)(n.h3,{id:"native-aot-publishing",children:"Native AOT Publishing"}),"\n",(0,o.jsx)(n.p,{children:"For Native AOT scenarios, use conservative settings:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"# Native AOT settings - maximum compatibility\ntunit.generic_depth_limit = 5\ntunit.max_generic_instantiations = 10\ntunit.enable_auto_generic_discovery = false  # Use explicit [GenerateGenericTest]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"common-configuration-patterns",children:"Common Configuration Patterns"}),"\n",(0,o.jsx)(n.h3,{id:"high-performance-testing",children:"High-Performance Testing"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"<PropertyGroup>\n  \x3c!-- Maximize runtime performance --\x3e\n  <TUnitAotOnlyMode>true</TUnitAotOnlyMode>\n  <TUnitEnableValueTaskHooks>true</TUnitEnableValueTaskHooks>\n  <TUnitGenericDepthLimit>3</TUnitGenericDepthLimit>\n  <TUnitMaxGenericInstantiations>5</TUnitMaxGenericInstantiations>\n</PropertyGroup>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"complex-generic-testing",children:"Complex Generic Testing"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"<PropertyGroup>\n  \x3c!-- Support complex generic scenarios --\x3e\n  <TUnitGenericDepthLimit>10</TUnitGenericDepthLimit>\n  <TUnitMaxGenericInstantiations>25</TUnitMaxGenericInstantiations>\n  <TUnitEnableAutoGenericDiscovery>true</TUnitEnableAutoGenericDiscovery>\n</PropertyGroup>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"minimal-code-generation",children:"Minimal Code Generation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"<PropertyGroup>\n  \x3c!-- Generate minimal code for smaller binaries --\x3e\n  <TUnitEnablePropertyInjection>false</TUnitEnablePropertyInjection>\n  <TUnitEnableValueTaskHooks>false</TUnitEnableValueTaskHooks>\n  <TUnitGenericDepthLimit>1</TUnitGenericDepthLimit>\n  <TUnitMaxGenericInstantiations>3</TUnitMaxGenericInstantiations>\n</PropertyGroup>\n"})}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting-configuration",children:"Troubleshooting Configuration"}),"\n",(0,o.jsx)(n.h3,{id:"compilation-time-issues",children:"Compilation Time Issues"}),"\n",(0,o.jsx)(n.p,{children:"If builds are too slow:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Reduce ",(0,o.jsx)(n.code,{children:"generic_depth_limit"})," to 3 or lower"]}),"\n",(0,o.jsxs)(n.li,{children:["Reduce ",(0,o.jsx)(n.code,{children:"max_generic_instantiations"})," to 5 or lower"]}),"\n",(0,o.jsxs)(n.li,{children:["Set ",(0,o.jsx)(n.code,{children:"enable_auto_generic_discovery = false"})," and use explicit ",(0,o.jsx)(n.code,{children:"[GenerateGenericTest]"})]}),"\n",(0,o.jsxs)(n.li,{children:["Disable ",(0,o.jsx)(n.code,{children:"enable_verbose_diagnostics"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"binary-size-issues",children:"Binary Size Issues"}),"\n",(0,o.jsx)(n.p,{children:"If published applications are too large:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Use minimal configuration pattern above"}),"\n",(0,o.jsx)(n.li,{children:"Review and remove unused generic instantiations"}),"\n",(0,o.jsx)(n.li,{children:"Consider disabling property injection if not needed"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"generic-type-support-issues",children:"Generic Type Support Issues"}),"\n",(0,o.jsx)(n.p,{children:"If generic tests aren't working:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Increase ",(0,o.jsx)(n.code,{children:"generic_depth_limit"})," to 8-10"]}),"\n",(0,o.jsxs)(n.li,{children:["Increase ",(0,o.jsx)(n.code,{children:"max_generic_instantiations"})," to 15-25"]}),"\n",(0,o.jsxs)(n.li,{children:["Enable ",(0,o.jsx)(n.code,{children:"enable_verbose_diagnostics"})," to see generation details"]}),"\n",(0,o.jsxs)(n.li,{children:["Add explicit ",(0,o.jsx)(n.code,{children:"[GenerateGenericTest]"})," attributes for complex scenarios"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"aot-compatibility-issues",children:"AOT Compatibility Issues"}),"\n",(0,o.jsx)(n.p,{children:"For Native AOT publishing problems:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Enable ",(0,o.jsx)(n.code,{children:"enable_verbose_diagnostics"})," to identify AOT warnings"]}),"\n",(0,o.jsx)(n.li,{children:"Use explicit generic instantiation instead of auto-discovery"}),"\n",(0,o.jsx)(n.li,{children:"Ensure all data sources use static methods"}),"\n",(0,o.jsx)(n.li,{children:"Avoid reflection APIs in test code (use diagnostics to find issues)"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(6540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);