"use strict";(self.webpackChunktunit_docs_site=self.webpackChunktunit_docs_site||[]).push([[286],{6233:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"test-authoring/combined-data-source-summary","title":"CombinedDataSources - Quick Reference","description":"What is it?","source":"@site/docs/test-authoring/combined-data-source-summary.md","sourceDirName":"test-authoring","slug":"/test-authoring/combined-data-source-summary","permalink":"/docs/test-authoring/combined-data-source-summary","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var r=t(4848),i=t(8453);const a={},l="CombinedDataSources - Quick Reference",d={},c=[{value:"What is it?",id:"what-is-it",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Key Benefits",id:"key-benefits",level:2},{value:"Supported Data Sources",id:"supported-data-sources",level:2},{value:"Cartesian Product",id:"cartesian-product",level:2},{value:"Common Patterns",id:"common-patterns",level:2},{value:"Pattern 1: All Arguments",id:"pattern-1-all-arguments",level:3},{value:"Pattern 2: Mixed Sources",id:"pattern-2-mixed-sources",level:3},{value:"Pattern 3: Multiple Per Parameter",id:"pattern-3-multiple-per-parameter",level:3},{value:"When to Use",id:"when-to-use",level:2},{value:"Performance Warning",id:"performance-warning",level:2},{value:"Full Documentation",id:"full-documentation",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"combineddatasources---quick-reference",children:"CombinedDataSources - Quick Reference"})}),"\n",(0,r.jsx)(n.h2,{id:"what-is-it",children:"What is it?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"[CombinedDataSources]"})," allows you to apply different data source attributes to individual test method parameters, automatically generating all possible combinations (Cartesian product)."]}),"\n",(0,r.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'[Test]\n[CombinedDataSources]\npublic async Task MyTest(\n    [Arguments(1, 2, 3)] int x,\n    [MethodDataSource(nameof(GetStrings))] string y)\n{\n    // Automatically creates 3 \xd7 2 = 6 test cases\n    await Assert.That(x).IsIn([1, 2, 3]);\n    await Assert.That(y).IsIn(["Hello", "World"]);\n}\n\npublic static IEnumerable<string> GetStrings()\n{\n    yield return "Hello";\n    yield return "World";\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,r.jsxs)(n.p,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Maximum Flexibility"})," - Mix ANY data source types on different parameters\n\u2705 ",(0,r.jsx)(n.strong,{children:"Automatic Combinations"})," - Generates Cartesian product automatically\n\u2705 ",(0,r.jsx)(n.strong,{children:"Clean Syntax"})," - Data sources defined right on the parameters\n\u2705 ",(0,r.jsx)(n.strong,{children:"Type Safe"})," - Full compile-time type checking\n\u2705 ",(0,r.jsx)(n.strong,{children:"AOT Compatible"})," - Works with Native AOT compilation"]}),"\n",(0,r.jsx)(n.h2,{id:"supported-data-sources",children:"Supported Data Sources"}),"\n",(0,r.jsx)(n.p,{children:"Apply these to individual parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[Arguments(1, 2, 3)]"})," - Inline values"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[MethodDataSource(nameof(Method))]"})," - From method"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[ClassDataSource<T>]"})," - Generate instances"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[CustomDataSource]"})," - Any ",(0,r.jsx)(n.code,{children:"IDataSourceAttribute"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"cartesian-product",children:"Cartesian Product"}),"\n",(0,r.jsx)(n.p,{children:"With 3 parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Parameter A: 2 values"}),"\n",(0,r.jsx)(n.li,{children:"Parameter B: 3 values"}),"\n",(0,r.jsx)(n.li,{children:"Parameter C: 4 values"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Result"}),": 2 \xd7 3 \xd7 4 = ",(0,r.jsx)(n.strong,{children:"24 test cases"})]}),"\n",(0,r.jsx)(n.h2,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"pattern-1-all-arguments",children:"Pattern 1: All Arguments"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'[Test]\n[CombinedDataSources]\npublic void Test(\n    [Arguments(1, 2)] int a,\n    [Arguments("x", "y")] string b)\n{\n    // 2 \xd7 2 = 4 tests\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"pattern-2-mixed-sources",children:"Pattern 2: Mixed Sources"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"[Test]\n[CombinedDataSources]\npublic void Test(\n    [Arguments(1, 2)] int a,\n    [MethodDataSource(nameof(GetData))] string b,\n    [ClassDataSource<MyClass>] MyClass c)\n{\n    // 2 \xd7 N \xd7 1 = 2N tests\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pattern-3-multiple-per-parameter",children:"Pattern 3: Multiple Per Parameter"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'[Test]\n[CombinedDataSources]\npublic void Test(\n    [Arguments(1, 2)]\n    [Arguments(3, 4)] int a,  // Combines to 4 values\n    [Arguments("x")] string b)\n{\n    // 4 \xd7 1 = 4 tests\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"when-to-use",children:"When to Use"}),"\n",(0,r.jsxs)(n.p,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Use CombinedDataSources when:"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Different parameters need different data sources"}),"\n",(0,r.jsx)(n.li,{children:"You want maximum flexibility in data generation"}),"\n",(0,r.jsx)(n.li,{children:"You need to test all combinations of inputs"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Use alternatives when:"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["All parameters use same type of data source \u2192 Consider ",(0,r.jsx)(n.code,{children:"[Matrix]"})]}),"\n",(0,r.jsxs)(n.li,{children:["You only need specific combinations \u2192 Use multiple ",(0,r.jsx)(n.code,{children:"[Test]"})," methods with ",(0,r.jsx)(n.code,{children:"[Arguments]"})]}),"\n",(0,r.jsx)(n.li,{children:"Test count would be excessive \u2192 Break into smaller tests"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance-warning",children:"Performance Warning"}),"\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,r.jsx)(n.strong,{children:"Be mindful of exponential growth!"})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Params"}),(0,r.jsx)(n.th,{children:"Values Each"}),(0,r.jsx)(n.th,{children:"Total Tests"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:"3"}),(0,r.jsx)(n.td,{children:"9"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"3"}),(0,r.jsx)(n.td,{children:"3"}),(0,r.jsx)(n.td,{children:"27"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"4"}),(0,r.jsx)(n.td,{children:"3"}),(0,r.jsx)(n.td,{children:"81"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"5"}),(0,r.jsx)(n.td,{children:"3"}),(0,r.jsx)(n.td,{children:"243"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"3"}),(0,r.jsx)(n.td,{children:"10"}),(0,r.jsx)(n.td,{children:"1,000"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"4"}),(0,r.jsx)(n.td,{children:"10"}),(0,r.jsx)(n.td,{children:"10,000"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"full-documentation",children:"Full Documentation"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/docs/test-authoring/combined-data-source",children:"CombinedDataSources"})," for complete documentation including:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Advanced scenarios"}),"\n",(0,r.jsx)(n.li,{children:"Error handling"}),"\n",(0,r.jsx)(n.li,{children:"AOT compilation details"}),"\n",(0,r.jsx)(n.li,{children:"Troubleshooting guide"}),"\n",(0,r.jsx)(n.li,{children:"Real-world examples"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);