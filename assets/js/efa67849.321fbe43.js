"use strict";(self.webpackChunktunit_docs_site=self.webpackChunktunit_docs_site||[]).push([[9763],{816:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>l,frontMatter:()=>c,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"execution/executors","title":"Executors","description":"In some advanced cases, you may need to control how a test or hook is executed.","source":"@site/docs/execution/executors.md","sourceDirName":"execution","slug":"/execution/executors","permalink":"/docs/execution/executors","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12},"sidebar":"docs","previous":{"title":"Test Filters","permalink":"/docs/execution/test-filters"},"next":{"title":"AOT-Only Mode","permalink":"/docs/execution/engine-modes"}}');var s=n(4848),r=n(8453);const c={sidebar_position:12},i="Executors",a={},u=[];function d(e){const t={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"executors",children:"Executors"})}),"\n",(0,s.jsx)(t.p,{children:"In some advanced cases, you may need to control how a test or hook is executed.\nThere are two interfaces that you can implement to control this:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"IHookExecutor"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"ITestExecutor"})}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"You will be given a delegate, and some context about what is executing, and you can control how to invoke it."}),"\n",(0,s.jsx)(t.p,{children:"To register your executor, on your test/hook, you can place an attribute of either:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"[HookExecutor<...>]"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"[TestExecutor<...>]"})}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"An example of where you might need this is running in a STA Thread."}),"\n",(0,s.jsx)(t.p,{children:"Here's an example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:"using TUnit.Core;\n\nnamespace MyTestProject;\n\npublic class MyTestClass\n{\n    [Test]\n    [TestExecutor<STAThreadExecutor>]\n    public async Task With_STA()\n    {\n        await Assert.That(Thread.CurrentThread.GetApartmentState()).IsEqualTo(ApartmentState.STA);\n    }\n    \n    [Test]\n    public async Task Without_STA()\n    {\n        await Assert.That(Thread.CurrentThread.GetApartmentState()).IsEqualTo(ApartmentState.MTA);\n    }\n}\n"})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var o=n(6540);const s={},r=o.createContext(s);function c(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);