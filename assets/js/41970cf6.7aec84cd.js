"use strict";(self.webpackChunktunit_docs_site=self.webpackChunktunit_docs_site||[]).push([[2025],{7638:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"tutorial-advanced/executors","title":"Executors","description":"In some advanced cases, you may need to control how a test or hook is executed.","source":"@site/docs/tutorial-advanced/executors.md","sourceDirName":"tutorial-advanced","slug":"/tutorial-advanced/executors","permalink":"/docs/tutorial-advanced/executors","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12},"sidebar":"tutorialSidebar","previous":{"title":"Parallel Limiter","permalink":"/docs/tutorial-advanced/parallel-limiter"},"next":{"title":"Class Constructor Helpers","permalink":"/docs/tutorial-advanced/class-constructors"}}');var o=n(4848),s=n(8453);const a={sidebar_position:12},c="Executors",i={},l=[];function d(e){const t={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"executors",children:"Executors"})}),"\n",(0,o.jsx)(t.p,{children:"In some advanced cases, you may need to control how a test or hook is executed.\nThere are two interfaces that you can implement to control this:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"IHookExecutor"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"ITestExecutor"})}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"You will be given a delegate, and some context about what is executing, and you can control how to invoke it."}),"\n",(0,o.jsx)(t.p,{children:"To register your executor, on your test/hook, you can place an attribute of either:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"[HookExecutor<...>]"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"[TestExecutor<...>]"})}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"An example of where you might need this is running in a STA Thread."}),"\n",(0,o.jsx)(t.p,{children:"Here's an example:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:"using TUnit.Core;\n\nnamespace MyTestProject;\n\npublic class MyTestClass\n{\n    [Test]\n    [TestExecutor<STAThreadExecutor>]\n    public async Task With_STA()\n    {\n        await Assert.That(Thread.CurrentThread.GetApartmentState()).IsEqualTo(ApartmentState.STA);\n    }\n    \n    [Test]\n    public async Task Without_STA()\n    {\n        await Assert.That(Thread.CurrentThread.GetApartmentState()).IsEqualTo(ApartmentState.MTA);\n    }\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var r=n(6540);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);