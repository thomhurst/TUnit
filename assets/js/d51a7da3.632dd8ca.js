"use strict";(self.webpackChunktunit_docs_site=self.webpackChunktunit_docs_site||[]).push([[453],{5156:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"tutorial-advanced/test-configuration","title":"Test Configuration","description":"TUnit supports having a testconfig.json file within your test project.","source":"@site/docs/tutorial-advanced/test-configuration.md","sourceDirName":"tutorial-advanced","slug":"/tutorial-advanced/test-configuration","permalink":"/docs/tutorial-advanced/test-configuration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Properties","permalink":"/docs/tutorial-advanced/properties"},"next":{"title":"Test Context","permalink":"/docs/tutorial-advanced/test-context"}}');var o=n(4848),i=n(8453);const r={sidebar_position:7},a="Test Configuration",c={},d=[];function u(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"test-configuration",children:"Test Configuration"})}),"\n",(0,o.jsxs)(t.p,{children:["TUnit supports having a ",(0,o.jsx)(t.code,{children:"testconfig.json"})," file within your test project."]}),"\n",(0,o.jsx)(t.p,{children:"This can be used to store key-value configuration pairs."}),"\n",(0,o.jsxs)(t.p,{children:["To retrieve these within your tests, you can use the static method ",(0,o.jsx)(t.code,{children:"TestContext.Configuration.Get(key)"})]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"testconfig.json"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'{\n  "MyKey1": "MyValue1",\n  "Nested": {\n    "MyKey2": "MyValue2"\n  }\n}\n'})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"Tests.cs"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'    [Test]\n    public async Task Test()\n    {\n        var value1 = TestContext.Configuration.Get("MyKey1"); // MyValue1 - As defined above\n        var value2 = TestContext.Configuration.Get("Nested:MyKey2"); // MyValue2 - As defined above\n        \n        ...\n    }\n'})})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(6540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);