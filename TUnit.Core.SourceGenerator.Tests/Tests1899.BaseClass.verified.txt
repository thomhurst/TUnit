[
  "// \u003Cauto-generated/\u003E\r\n#pragma warning disable\r\nusing global::System.Linq;\r\nusing global::System.Reflection;\r\nusing global::System.Runtime.CompilerServices;\r\nusing global::TUnit.Core;\r\nusing global::TUnit.Core.Hooks;\r\nusing global::TUnit.Core.Interfaces;\r\n\r\nnamespace TUnit.SourceGenerated;\r\n\r\n[global::System.Diagnostics.StackTraceHidden]\r\n[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\r\n[System.CodeDom.Compiler.GeneratedCode(\u0022TUnit\u0022, \u00221.0.0.0\u0022)]\r\nfile partial class Hooks_BaseClass : global::TUnit.Core.Interfaces.SourceGenerator.ITestHookSource\r\n{\r\n\t[global::System.Runtime.CompilerServices.ModuleInitializer]\r\n\tpublic static void Initialise()\r\n\t{\r\n\t\tvar instance = new Hooks_BaseClass();\r\n\t\tSourceRegistrar.RegisterTestHookSource(instance);\r\n\t}\r\n\r\n\tpublic global::System.Collections.Generic.IReadOnlyList\u003Cglobal::TUnit.Core.Hooks.StaticHookMethod\u003Cglobal::TUnit.Core.TestContext\u003E\u003E CollectBeforeEveryTestHooks(string sessionId)\r\n\t{\r\n\t\treturn\r\n\t\t[\r\n\t\t];\r\n\t}\r\n\r\n\tpublic global::System.Collections.Generic.IReadOnlyList\u003Cglobal::TUnit.Core.Hooks.StaticHookMethod\u003Cglobal::TUnit.Core.TestContext\u003E\u003E CollectAfterEveryTestHooks(string sessionId)\r\n\t{\r\n\t\treturn\r\n\t\t[\r\n\t\t];\r\n\t}\r\n\r\n\tpublic global::System.Collections.Generic.IReadOnlyList\u003Cglobal::TUnit.Core.Hooks.InstanceHookMethod\u003E CollectBeforeTestHooks(string sessionId)\r\n\t{\r\n\t\treturn\r\n\t\t[\r\n\t\t\tnew global::TUnit.Core.Hooks.InstanceHookMethod\r\n\t\t\t{\r\n\t\t\t\tClassType = typeof(global::TUnit.TestProject.Library.Bugs._1899.BaseClass\u003C\u003E),\r\n\t\t\t\tMethodInfo = new global::TUnit.Core.TestMethod\r\n\t\t\t\t{\r\n\t\t\t\t\tType = typeof(global::TUnit.TestProject.Library.Bugs._1899.BaseClass\u003C\u003E),\r\n\t\t\t\t\tName = \u0022Setup\u0022,\r\n\t\t\t\t\tGenericTypeCount = 0,\r\n\t\t\t\t\tReturnType = typeof(void),\r\n\t\t\t\t\tAttributes = \r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tnew global::TUnit.Core.BeforeAttribute(global::TUnit.Core.HookType.Test)\r\n\t\t\t\t\t],\r\n\t\t\t\t\tParameters = [],\r\n\t\t\t\t\tClass = global::TUnit.Core.TestClass.GetOrAdd(\u0022global::TUnit.TestProject.Library.Bugs._1899.BaseClass\u003C\u003E\u0022, () =\u003E new global::TUnit.Core.TestClass\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tParent = null,\r\n\t\t\t\t\t\tType = typeof(global::TUnit.TestProject.Library.Bugs._1899.BaseClass\u003C\u003E),\r\n\t\t\t\t\t\tAssembly = global::TUnit.Core.TestAssembly.GetOrAdd(\u0022Tests1899\u0022, () =\u003E new global::TUnit.Core.TestAssembly\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tName = \u0022Tests1899\u0022,\r\n\t\t\t\t\t\t\tAttributes = \r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute()\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tName = \u0022BaseClass\u0022,\r\n\t\t\t\t\t\tNamespace = \u0022TUnit.TestProject.Library.Bugs._1899\u0022,\r\n\t\t\t\t\t\tAttributes = [],\r\n\t\t\t\t\t\tParameters = [],\r\n\t\t\t\t\t\tProperties = [],\r\n\t\t\t\t\t}),\r\n\t\t\t\t}\r\n\t\t\t\t,\r\n\r\n\t\t\t\tBody = (classInstance, context, cancellationToken) =\u003E AsyncConvert.ConvertObject(() =\u003E classInstance.GetType().GetMethod(\u0022Setup\u0022, []).Invoke(classInstance, [])),\r\n\t\t\t\tHookExecutor = DefaultExecutor.Instance,\r\n\t\t\t\tOrder = 0,\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\r\n\tpublic global::System.Collections.Generic.IReadOnlyList\u003Cglobal::TUnit.Core.Hooks.InstanceHookMethod\u003E CollectAfterTestHooks(string sessionId)\r\n\t{\r\n\t\treturn\r\n\t\t[\r\n\t\t];\r\n\t}\r\n\r\n}"
]