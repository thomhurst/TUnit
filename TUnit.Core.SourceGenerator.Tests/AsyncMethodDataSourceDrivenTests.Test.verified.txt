[
  "// \u003Cauto-generated/\u003E\r\n#pragma warning disable\r\nusing global::System.Linq;\r\nusing global::System.Reflection;\r\nusing global::TUnit.Core;\r\nusing global::TUnit.Core.Extensions;\r\n\r\nnamespace TUnit.SourceGenerated;\r\n\r\n[global::System.Diagnostics.StackTraceHidden]\r\n[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\r\n[System.CodeDom.Compiler.GeneratedCode(\u0022TUnit\u0022, \u00221.0.0.0\u0022)]\r\nfile partial class AsyncMethodDataSourceDrivenTests : global::TUnit.Core.Interfaces.SourceGenerator.ITestSource\r\n{\r\n\t[global::System.Runtime.CompilerServices.ModuleInitializer]\r\n\tpublic static void Initialise()\r\n\t{\r\n\t\tglobal::TUnit.Core.SourceRegistrar.Register(new AsyncMethodDataSourceDrivenTests());\r\n\t}\r\n\r\n\tpublic async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.IReadOnlyList\u003CTestMetadata\u003E\u003E CollectTestsAsync(string sessionId)\r\n\t{\r\n\t\treturn await Tests0(sessionId);\r\n\t}\r\n\r\n\tprivate async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003CTestMetadata\u003E\u003E Tests0(string sessionId)\r\n\t{\r\n\t\tglobal::System.Collections.Generic.List\u003CTestMetadata\u003E nodes = [];\r\n\t\tvar classDataIndex = 0;\r\n\t\tvar testMethodDataIndex = 0;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tvar testInformation = new global::TUnit.Core.TestMethod\r\n\t\t\t{\r\n\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\tName = \u0022AsyncMethodDataSource_SingleValue\u0022,\r\n\t\t\t\tGenericTypeCount = 0,\r\n\t\t\t\tReturnType = typeof(global::System.Threading.Tasks.Task),\r\n\t\t\t\tAttributes = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestAttribute(),\r\n\r\n\t\t\t\t\tnew global::TUnit.Core.MethodDataSourceAttribute(\u0022AsyncDataMethod\u0022)\r\n\t\t\t\t],\r\n\t\t\t\tParameters = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestParameter\u003Cint\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022value\u0022,\r\n\t\t\t\t\t\tAttributes = [],\r\n\t\t\t\t\t\tReflectionInfo = null!,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tClass = global::TUnit.Core.TestClass.GetOrAdd(\u0022global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestClass\r\n\t\t\t\t{\r\n\t\t\t\t\tParent = null,\r\n\t\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\t\tAssembly = global::TUnit.Core.TestAssembly.GetOrAdd(\u0022AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestAssembly\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\t\tAttributes = \r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute()\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\tNamespace = \u0022TUnit.TestProject\u0022,\r\n\t\t\t\t\tAttributes = \r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass)\r\n\t\t\t\t\t],\r\n\t\t\t\t\tParameters = [],\r\n\t\t\t\t\tProperties = [],\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\r\n\r\n\t\t\tvar testBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t{\r\n\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_SingleValue\u0022,\r\n\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\tMethodInformation = testInformation\t\t\t};\r\n\t\t\tvar testBuilderContextAccessor = new global::TUnit.Core.TestBuilderContextAccessor(testBuilderContext);\r\n\t\t\tglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests? classInstance = null;\r\n\t\t\tobject?[]? classInstanceArguments = null;\r\n\t\t\tforeach (var methodDataAccessor in global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncDataMethod())\r\n\t\t\t{\r\n\t\t\t\ttestMethodDataIndex\u002B\u002B;\r\n\t\t\t\tclassInstanceArguments = [];\r\n\r\n\t\t\t\tvar methodData = methodDataAccessor;\r\n\t\t\t\tvar resettableClassFactoryDelegate = () =\u003E new ResettableLazy\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E(() =\u003E new global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests(), sessionId, testBuilderContext);\r\n\t\t\t\tvar resettableClassFactory = resettableClassFactoryDelegate();\r\n\r\n\r\n\t\t\t\tnodes.Add(new TestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t\t{\r\n\t\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_SingleValue(int):0\u0022,\r\n\t\t\t\t\tTestClassArguments = [],\r\n\t\t\t\t\tTestMethodArguments = [methodData],\r\n\t\t\t\t\tTestClassProperties = new global::System.Collections.Generic.Dictionary\u003Cstring, object?\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t},\r\n\t\t\t\t\tCurrentRepeatAttempt = 0,\r\n\t\t\t\t\tRepeatLimit = 0,\r\n\t\t\t\t\tResettableClassFactory = resettableClassFactory,\r\n\t\t\t\t\tTestMethodFactory = (classInstance, cancellationToken) =\u003E AsyncConvert.Convert(() =\u003E classInstance.AsyncMethodDataSource_SingleValue(methodData)),\r\n\t\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\t\tTestLineNumber = 10,\r\n\t\t\t\t\tTestMethod = testInformation,\r\n\t\t\t\t\tTestBuilderContext = testBuilderContext,\r\n\t\t\t\t});\r\n\t\t\t\tresettableClassFactory = resettableClassFactoryDelegate();\r\n\t\t\t\ttestBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t\t{\r\n\t\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_SingleValue\u0022,\r\n\t\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\t\tMethodInformation = testInformation\t\t\t\t};\r\n\t\t\t\ttestBuilderContextAccessor.Current = testBuilderContext;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (global::System.Exception exception)\r\n\t\t{\r\n\t\t\tnodes.Add(new FailedTestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t{\r\n\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_SingleValue(int):0\u0022,\r\n\t\t\t\tMethodName = $\u0022AsyncMethodDataSource_SingleValue\u0022,\r\n\t\t\t\tException = new TUnit.Core.Exceptions.TestFailedInitializationException(\u0022AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_SingleValue failed to initialize\u0022, exception),\r\n\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\tTestLineNumber = 10,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn nodes;\r\n\t}\r\n\r\n}",
  "// \u003Cauto-generated/\u003E\r\n#pragma warning disable\r\nusing global::System.Linq;\r\nusing global::System.Reflection;\r\nusing global::TUnit.Core;\r\nusing global::TUnit.Core.Extensions;\r\n\r\nnamespace TUnit.SourceGenerated;\r\n\r\n[global::System.Diagnostics.StackTraceHidden]\r\n[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\r\n[System.CodeDom.Compiler.GeneratedCode(\u0022TUnit\u0022, \u00221.0.0.0\u0022)]\r\nfile partial class AsyncMethodDataSourceDrivenTests : global::TUnit.Core.Interfaces.SourceGenerator.ITestSource\r\n{\r\n\t[global::System.Runtime.CompilerServices.ModuleInitializer]\r\n\tpublic static void Initialise()\r\n\t{\r\n\t\tglobal::TUnit.Core.SourceRegistrar.Register(new AsyncMethodDataSourceDrivenTests());\r\n\t}\r\n\r\n\tpublic async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.IReadOnlyList\u003CTestMetadata\u003E\u003E CollectTestsAsync(string sessionId)\r\n\t{\r\n\t\treturn await Tests0(sessionId);\r\n\t}\r\n\r\n\tprivate async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003CTestMetadata\u003E\u003E Tests0(string sessionId)\r\n\t{\r\n\t\tglobal::System.Collections.Generic.List\u003CTestMetadata\u003E nodes = [];\r\n\t\tvar classDataIndex = 0;\r\n\t\tvar testMethodDataIndex = 0;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tvar testInformation = new global::TUnit.Core.TestMethod\r\n\t\t\t{\r\n\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\tName = \u0022AsyncMethodDataSource_Tuples\u0022,\r\n\t\t\t\tGenericTypeCount = 0,\r\n\t\t\t\tReturnType = typeof(global::System.Threading.Tasks.Task),\r\n\t\t\t\tAttributes = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestAttribute(),\r\n\r\n\t\t\t\t\tnew global::TUnit.Core.MethodDataSourceAttribute(\u0022AsyncDataMethodWithTuples\u0022)\r\n\t\t\t\t],\r\n\t\t\t\tParameters = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestParameter\u003Cint\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022value1\u0022,\r\n\t\t\t\t\t\tAttributes = [],\r\n\t\t\t\t\t\tReflectionInfo = null!,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnew global::TUnit.Core.TestParameter\u003Cstring\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022value2\u0022,\r\n\t\t\t\t\t\tAttributes = [],\r\n\t\t\t\t\t\tReflectionInfo = null!,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tClass = global::TUnit.Core.TestClass.GetOrAdd(\u0022global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestClass\r\n\t\t\t\t{\r\n\t\t\t\t\tParent = null,\r\n\t\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\t\tAssembly = global::TUnit.Core.TestAssembly.GetOrAdd(\u0022AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestAssembly\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\t\tAttributes = \r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute()\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\tNamespace = \u0022TUnit.TestProject\u0022,\r\n\t\t\t\t\tAttributes = \r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass)\r\n\t\t\t\t\t],\r\n\t\t\t\t\tParameters = [],\r\n\t\t\t\t\tProperties = [],\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\r\n\r\n\t\t\tvar testBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t{\r\n\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_Tuples\u0022,\r\n\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\tMethodInformation = testInformation\t\t\t};\r\n\t\t\tvar testBuilderContextAccessor = new global::TUnit.Core.TestBuilderContextAccessor(testBuilderContext);\r\n\t\t\tglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests? classInstance = null;\r\n\t\t\tobject?[]? classInstanceArguments = null;\r\n\t\t\tforeach (var methodDataAccessor in global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncDataMethodWithTuples())\r\n\t\t\t{\r\n\t\t\t\ttestMethodDataIndex\u002B\u002B;\r\n\t\t\t\tclassInstanceArguments = [];\r\n\r\n\t\t\t\tvar methodData = methodDataAccessor;\r\n\t\t\t\tvar methodArgTuples = global::System.TupleExtensions.ToTuple\u003Cint, string\u003E(methodData);\r\n\t\t\t\tint methodArg = methodArgTuples.Item1;\r\n\t\t\t\tstring methodArg1 = methodArgTuples.Item2;\r\n\t\t\t\tvar resettableClassFactoryDelegate = () =\u003E new ResettableLazy\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E(() =\u003E new global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests(), sessionId, testBuilderContext);\r\n\t\t\t\tvar resettableClassFactory = resettableClassFactoryDelegate();\r\n\r\n\r\n\t\t\t\tnodes.Add(new TestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t\t{\r\n\t\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_Tuples(int,string):0\u0022,\r\n\t\t\t\t\tTestClassArguments = [],\r\n\t\t\t\t\tTestMethodArguments = [methodArg, methodArg1],\r\n\t\t\t\t\tTestClassProperties = new global::System.Collections.Generic.Dictionary\u003Cstring, object?\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t},\r\n\t\t\t\t\tCurrentRepeatAttempt = 0,\r\n\t\t\t\t\tRepeatLimit = 0,\r\n\t\t\t\t\tResettableClassFactory = resettableClassFactory,\r\n\t\t\t\t\tTestMethodFactory = (classInstance, cancellationToken) =\u003E AsyncConvert.Convert(() =\u003E classInstance.AsyncMethodDataSource_Tuples(methodArg, methodArg1)),\r\n\t\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\t\tTestLineNumber = 17,\r\n\t\t\t\t\tTestMethod = testInformation,\r\n\t\t\t\t\tTestBuilderContext = testBuilderContext,\r\n\t\t\t\t});\r\n\t\t\t\tresettableClassFactory = resettableClassFactoryDelegate();\r\n\t\t\t\ttestBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t\t{\r\n\t\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_Tuples\u0022,\r\n\t\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\t\tMethodInformation = testInformation\t\t\t\t};\r\n\t\t\t\ttestBuilderContextAccessor.Current = testBuilderContext;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (global::System.Exception exception)\r\n\t\t{\r\n\t\t\tnodes.Add(new FailedTestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t{\r\n\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_Tuples(int,string):0\u0022,\r\n\t\t\t\tMethodName = $\u0022AsyncMethodDataSource_Tuples\u0022,\r\n\t\t\t\tException = new TUnit.Core.Exceptions.TestFailedInitializationException(\u0022AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_Tuples failed to initialize\u0022, exception),\r\n\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\tTestLineNumber = 17,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn nodes;\r\n\t}\r\n\r\n}",
  "// \u003Cauto-generated/\u003E\r\n#pragma warning disable\r\nusing global::System.Linq;\r\nusing global::System.Reflection;\r\nusing global::TUnit.Core;\r\nusing global::TUnit.Core.Extensions;\r\n\r\nnamespace TUnit.SourceGenerated;\r\n\r\n[global::System.Diagnostics.StackTraceHidden]\r\n[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\r\n[System.CodeDom.Compiler.GeneratedCode(\u0022TUnit\u0022, \u00221.0.0.0\u0022)]\r\nfile partial class AsyncMethodDataSourceDrivenTests : global::TUnit.Core.Interfaces.SourceGenerator.ITestSource\r\n{\r\n\t[global::System.Runtime.CompilerServices.ModuleInitializer]\r\n\tpublic static void Initialise()\r\n\t{\r\n\t\tglobal::TUnit.Core.SourceRegistrar.Register(new AsyncMethodDataSourceDrivenTests());\r\n\t}\r\n\r\n\tpublic async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.IReadOnlyList\u003CTestMetadata\u003E\u003E CollectTestsAsync(string sessionId)\r\n\t{\r\n\t\treturn await Tests0(sessionId);\r\n\t}\r\n\r\n\tprivate async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003CTestMetadata\u003E\u003E Tests0(string sessionId)\r\n\t{\r\n\t\tglobal::System.Collections.Generic.List\u003CTestMetadata\u003E nodes = [];\r\n\t\tvar classDataIndex = 0;\r\n\t\tvar testMethodDataIndex = 0;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tvar testInformation = new global::TUnit.Core.TestMethod\r\n\t\t\t{\r\n\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\tName = \u0022AsyncMethodDataSource_Enumerable\u0022,\r\n\t\t\t\tGenericTypeCount = 0,\r\n\t\t\t\tReturnType = typeof(global::System.Threading.Tasks.Task),\r\n\t\t\t\tAttributes = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestAttribute(),\r\n\r\n\t\t\t\t\tnew global::TUnit.Core.MethodDataSourceAttribute(\u0022AsyncEnumerableDataMethod\u0022)\r\n\t\t\t\t],\r\n\t\t\t\tParameters = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestParameter\u003Cint\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022value\u0022,\r\n\t\t\t\t\t\tAttributes = [],\r\n\t\t\t\t\t\tReflectionInfo = null!,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tClass = global::TUnit.Core.TestClass.GetOrAdd(\u0022global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestClass\r\n\t\t\t\t{\r\n\t\t\t\t\tParent = null,\r\n\t\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\t\tAssembly = global::TUnit.Core.TestAssembly.GetOrAdd(\u0022AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestAssembly\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\t\tAttributes = \r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute()\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\tNamespace = \u0022TUnit.TestProject\u0022,\r\n\t\t\t\t\tAttributes = \r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass)\r\n\t\t\t\t\t],\r\n\t\t\t\t\tParameters = [],\r\n\t\t\t\t\tProperties = [],\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\r\n\r\n\t\t\tvar testBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t{\r\n\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_Enumerable\u0022,\r\n\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\tMethodInformation = testInformation\t\t\t};\r\n\t\t\tvar testBuilderContextAccessor = new global::TUnit.Core.TestBuilderContextAccessor(testBuilderContext);\r\n\t\t\tglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests? classInstance = null;\r\n\t\t\tobject?[]? classInstanceArguments = null;\r\n\t\t\tforeach (var methodDataAccessor in global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncEnumerableDataMethod())\r\n\t\t\t{\r\n\t\t\t\ttestMethodDataIndex\u002B\u002B;\r\n\t\t\t\tclassInstanceArguments = [];\r\n\r\n\t\t\t\tvar methodData = methodDataAccessor;\r\n\t\t\t\tvar resettableClassFactoryDelegate = () =\u003E new ResettableLazy\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E(() =\u003E new global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests(), sessionId, testBuilderContext);\r\n\t\t\t\tvar resettableClassFactory = resettableClassFactoryDelegate();\r\n\r\n\r\n\t\t\t\tnodes.Add(new TestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t\t{\r\n\t\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_Enumerable(int):0\u0022,\r\n\t\t\t\t\tTestClassArguments = [],\r\n\t\t\t\t\tTestMethodArguments = [methodData],\r\n\t\t\t\t\tTestClassProperties = new global::System.Collections.Generic.Dictionary\u003Cstring, object?\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t},\r\n\t\t\t\t\tCurrentRepeatAttempt = 0,\r\n\t\t\t\t\tRepeatLimit = 0,\r\n\t\t\t\t\tResettableClassFactory = resettableClassFactory,\r\n\t\t\t\t\tTestMethodFactory = (classInstance, cancellationToken) =\u003E AsyncConvert.Convert(() =\u003E classInstance.AsyncMethodDataSource_Enumerable(methodData)),\r\n\t\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\t\tTestLineNumber = 25,\r\n\t\t\t\t\tTestMethod = testInformation,\r\n\t\t\t\t\tTestBuilderContext = testBuilderContext,\r\n\t\t\t\t});\r\n\t\t\t\tresettableClassFactory = resettableClassFactoryDelegate();\r\n\t\t\t\ttestBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t\t{\r\n\t\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_Enumerable\u0022,\r\n\t\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\t\tMethodInformation = testInformation\t\t\t\t};\r\n\t\t\t\ttestBuilderContextAccessor.Current = testBuilderContext;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (global::System.Exception exception)\r\n\t\t{\r\n\t\t\tnodes.Add(new FailedTestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t{\r\n\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_Enumerable(int):0\u0022,\r\n\t\t\t\tMethodName = $\u0022AsyncMethodDataSource_Enumerable\u0022,\r\n\t\t\t\tException = new TUnit.Core.Exceptions.TestFailedInitializationException(\u0022AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_Enumerable failed to initialize\u0022, exception),\r\n\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\tTestLineNumber = 25,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn nodes;\r\n\t}\r\n\r\n}",
  "// \u003Cauto-generated/\u003E\r\n#pragma warning disable\r\nusing global::System.Linq;\r\nusing global::System.Reflection;\r\nusing global::TUnit.Core;\r\nusing global::TUnit.Core.Extensions;\r\n\r\nnamespace TUnit.SourceGenerated;\r\n\r\n[global::System.Diagnostics.StackTraceHidden]\r\n[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\r\n[System.CodeDom.Compiler.GeneratedCode(\u0022TUnit\u0022, \u00221.0.0.0\u0022)]\r\nfile partial class AsyncMethodDataSourceDrivenTests : global::TUnit.Core.Interfaces.SourceGenerator.ITestSource\r\n{\r\n\t[global::System.Runtime.CompilerServices.ModuleInitializer]\r\n\tpublic static void Initialise()\r\n\t{\r\n\t\tglobal::TUnit.Core.SourceRegistrar.Register(new AsyncMethodDataSourceDrivenTests());\r\n\t}\r\n\r\n\tpublic async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.IReadOnlyList\u003CTestMetadata\u003E\u003E CollectTestsAsync(string sessionId)\r\n\t{\r\n\t\treturn await Tests0(sessionId);\r\n\t}\r\n\r\n\tprivate async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003CTestMetadata\u003E\u003E Tests0(string sessionId)\r\n\t{\r\n\t\tglobal::System.Collections.Generic.List\u003CTestMetadata\u003E nodes = [];\r\n\t\tvar classDataIndex = 0;\r\n\t\tvar testMethodDataIndex = 0;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tvar testInformation = new global::TUnit.Core.TestMethod\r\n\t\t\t{\r\n\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\tName = \u0022AsyncMethodDataSource_Func\u0022,\r\n\t\t\t\tGenericTypeCount = 0,\r\n\t\t\t\tReturnType = typeof(global::System.Threading.Tasks.Task),\r\n\t\t\t\tAttributes = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestAttribute(),\r\n\r\n\t\t\t\t\tnew global::TUnit.Core.MethodDataSourceAttribute(\u0022AsyncFuncDataMethod\u0022)\r\n\t\t\t\t],\r\n\t\t\t\tParameters = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestParameter\u003Cint\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022value\u0022,\r\n\t\t\t\t\t\tAttributes = [],\r\n\t\t\t\t\t\tReflectionInfo = null!,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tClass = global::TUnit.Core.TestClass.GetOrAdd(\u0022global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestClass\r\n\t\t\t\t{\r\n\t\t\t\t\tParent = null,\r\n\t\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\t\tAssembly = global::TUnit.Core.TestAssembly.GetOrAdd(\u0022AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestAssembly\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\t\tAttributes = \r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute()\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\tNamespace = \u0022TUnit.TestProject\u0022,\r\n\t\t\t\t\tAttributes = \r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass)\r\n\t\t\t\t\t],\r\n\t\t\t\t\tParameters = [],\r\n\t\t\t\t\tProperties = [],\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\r\n\r\n\t\t\tvar testBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t{\r\n\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_Func\u0022,\r\n\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\tMethodInformation = testInformation\t\t\t};\r\n\t\t\tvar testBuilderContextAccessor = new global::TUnit.Core.TestBuilderContextAccessor(testBuilderContext);\r\n\t\t\tglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests? classInstance = null;\r\n\t\t\tobject?[]? classInstanceArguments = null;\r\n\t\t\tforeach (var methodDataAccessor in global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncFuncDataMethod())\r\n\t\t\t{\r\n\t\t\t\ttestMethodDataIndex\u002B\u002B;\r\n\t\t\t\tclassInstanceArguments = [];\r\n\r\n\t\t\t\tvar methodData = methodDataAccessor;\r\n\t\t\t\tvar resettableClassFactoryDelegate = () =\u003E new ResettableLazy\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E(() =\u003E new global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests(), sessionId, testBuilderContext);\r\n\t\t\t\tvar resettableClassFactory = resettableClassFactoryDelegate();\r\n\r\n\r\n\t\t\t\tnodes.Add(new TestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t\t{\r\n\t\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_Func(int):0\u0022,\r\n\t\t\t\t\tTestClassArguments = [],\r\n\t\t\t\t\tTestMethodArguments = [methodData],\r\n\t\t\t\t\tTestClassProperties = new global::System.Collections.Generic.Dictionary\u003Cstring, object?\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t},\r\n\t\t\t\t\tCurrentRepeatAttempt = 0,\r\n\t\t\t\t\tRepeatLimit = 0,\r\n\t\t\t\t\tResettableClassFactory = resettableClassFactory,\r\n\t\t\t\t\tTestMethodFactory = (classInstance, cancellationToken) =\u003E AsyncConvert.Convert(() =\u003E classInstance.AsyncMethodDataSource_Func(methodData)),\r\n\t\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\t\tTestLineNumber = 32,\r\n\t\t\t\t\tTestMethod = testInformation,\r\n\t\t\t\t\tTestBuilderContext = testBuilderContext,\r\n\t\t\t\t});\r\n\t\t\t\tresettableClassFactory = resettableClassFactoryDelegate();\r\n\t\t\t\ttestBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t\t{\r\n\t\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_Func\u0022,\r\n\t\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\t\tMethodInformation = testInformation\t\t\t\t};\r\n\t\t\t\ttestBuilderContextAccessor.Current = testBuilderContext;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (global::System.Exception exception)\r\n\t\t{\r\n\t\t\tnodes.Add(new FailedTestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t{\r\n\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_Func(int):0\u0022,\r\n\t\t\t\tMethodName = $\u0022AsyncMethodDataSource_Func\u0022,\r\n\t\t\t\tException = new TUnit.Core.Exceptions.TestFailedInitializationException(\u0022AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_Func failed to initialize\u0022, exception),\r\n\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\tTestLineNumber = 32,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn nodes;\r\n\t}\r\n\r\n}",
  "// \u003Cauto-generated/\u003E\r\n#pragma warning disable\r\nusing global::System.Linq;\r\nusing global::System.Reflection;\r\nusing global::TUnit.Core;\r\nusing global::TUnit.Core.Extensions;\r\n\r\nnamespace TUnit.SourceGenerated;\r\n\r\n[global::System.Diagnostics.StackTraceHidden]\r\n[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\r\n[System.CodeDom.Compiler.GeneratedCode(\u0022TUnit\u0022, \u00221.0.0.0\u0022)]\r\nfile partial class AsyncMethodDataSourceDrivenTests : global::TUnit.Core.Interfaces.SourceGenerator.ITestSource\r\n{\r\n\t[global::System.Runtime.CompilerServices.ModuleInitializer]\r\n\tpublic static void Initialise()\r\n\t{\r\n\t\tglobal::TUnit.Core.SourceRegistrar.Register(new AsyncMethodDataSourceDrivenTests());\r\n\t}\r\n\r\n\tpublic async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.IReadOnlyList\u003CTestMetadata\u003E\u003E CollectTestsAsync(string sessionId)\r\n\t{\r\n\t\treturn await Tests0(sessionId);\r\n\t}\r\n\r\n\tprivate async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003CTestMetadata\u003E\u003E Tests0(string sessionId)\r\n\t{\r\n\t\tglobal::System.Collections.Generic.List\u003CTestMetadata\u003E nodes = [];\r\n\t\tvar classDataIndex = 0;\r\n\t\tvar testMethodDataIndex = 0;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tvar testInformation = new global::TUnit.Core.TestMethod\r\n\t\t\t{\r\n\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\tName = \u0022AsyncMethodDataSource_WithArguments\u0022,\r\n\t\t\t\tGenericTypeCount = 0,\r\n\t\t\t\tReturnType = typeof(global::System.Threading.Tasks.Task),\r\n\t\t\t\tAttributes = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestAttribute(),\r\n\r\n\t\t\t\t\tnew global::TUnit.Core.MethodDataSourceAttribute(\u0022AsyncDataMethodWithArgs\u0022)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tArguments = [5],\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tParameters = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestParameter\u003Cint\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022value\u0022,\r\n\t\t\t\t\t\tAttributes = [],\r\n\t\t\t\t\t\tReflectionInfo = null!,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tClass = global::TUnit.Core.TestClass.GetOrAdd(\u0022global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestClass\r\n\t\t\t\t{\r\n\t\t\t\t\tParent = null,\r\n\t\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\t\tAssembly = global::TUnit.Core.TestAssembly.GetOrAdd(\u0022AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestAssembly\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\t\tAttributes = \r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute()\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\tNamespace = \u0022TUnit.TestProject\u0022,\r\n\t\t\t\t\tAttributes = \r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass)\r\n\t\t\t\t\t],\r\n\t\t\t\t\tParameters = [],\r\n\t\t\t\t\tProperties = [],\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\r\n\r\n\t\t\tvar testBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t{\r\n\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_WithArguments\u0022,\r\n\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\tMethodInformation = testInformation\t\t\t};\r\n\t\t\tvar testBuilderContextAccessor = new global::TUnit.Core.TestBuilderContextAccessor(testBuilderContext);\r\n\t\t\tglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests? classInstance = null;\r\n\t\t\tobject?[]? classInstanceArguments = null;\r\n\t\t\tforeach (var methodDataAccessor in global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncDataMethodWithArgs(5))\r\n\t\t\t{\r\n\t\t\t\ttestMethodDataIndex\u002B\u002B;\r\n\t\t\t\tclassInstanceArguments = [];\r\n\r\n\t\t\t\tvar methodData = methodDataAccessor;\r\n\t\t\t\tvar resettableClassFactoryDelegate = () =\u003E new ResettableLazy\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E(() =\u003E new global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests(), sessionId, testBuilderContext);\r\n\t\t\t\tvar resettableClassFactory = resettableClassFactoryDelegate();\r\n\r\n\r\n\t\t\t\tnodes.Add(new TestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t\t{\r\n\t\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_WithArguments(int):0\u0022,\r\n\t\t\t\t\tTestClassArguments = [],\r\n\t\t\t\t\tTestMethodArguments = [methodData],\r\n\t\t\t\t\tTestClassProperties = new global::System.Collections.Generic.Dictionary\u003Cstring, object?\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t},\r\n\t\t\t\t\tCurrentRepeatAttempt = 0,\r\n\t\t\t\t\tRepeatLimit = 0,\r\n\t\t\t\t\tResettableClassFactory = resettableClassFactory,\r\n\t\t\t\t\tTestMethodFactory = (classInstance, cancellationToken) =\u003E AsyncConvert.Convert(() =\u003E classInstance.AsyncMethodDataSource_WithArguments(methodData)),\r\n\t\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\t\tTestLineNumber = 39,\r\n\t\t\t\t\tTestMethod = testInformation,\r\n\t\t\t\t\tTestBuilderContext = testBuilderContext,\r\n\t\t\t\t});\r\n\t\t\t\tresettableClassFactory = resettableClassFactoryDelegate();\r\n\t\t\t\ttestBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t\t{\r\n\t\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_WithArguments\u0022,\r\n\t\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\t\tMethodInformation = testInformation\t\t\t\t};\r\n\t\t\t\ttestBuilderContextAccessor.Current = testBuilderContext;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (global::System.Exception exception)\r\n\t\t{\r\n\t\t\tnodes.Add(new FailedTestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t{\r\n\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_WithArguments(int):0\u0022,\r\n\t\t\t\tMethodName = $\u0022AsyncMethodDataSource_WithArguments\u0022,\r\n\t\t\t\tException = new TUnit.Core.Exceptions.TestFailedInitializationException(\u0022AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_WithArguments failed to initialize\u0022, exception),\r\n\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\tTestLineNumber = 39,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn nodes;\r\n\t}\r\n\r\n}",
  "// \u003Cauto-generated/\u003E\r\n#pragma warning disable\r\nusing global::System.Linq;\r\nusing global::System.Reflection;\r\nusing global::TUnit.Core;\r\nusing global::TUnit.Core.Extensions;\r\n\r\nnamespace TUnit.SourceGenerated;\r\n\r\n[global::System.Diagnostics.StackTraceHidden]\r\n[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\r\n[System.CodeDom.Compiler.GeneratedCode(\u0022TUnit\u0022, \u00221.0.0.0\u0022)]\r\nfile partial class AsyncMethodDataSourceDrivenTests : global::TUnit.Core.Interfaces.SourceGenerator.ITestSource\r\n{\r\n\t[global::System.Runtime.CompilerServices.ModuleInitializer]\r\n\tpublic static void Initialise()\r\n\t{\r\n\t\tglobal::TUnit.Core.SourceRegistrar.Register(new AsyncMethodDataSourceDrivenTests());\r\n\t}\r\n\r\n\tpublic async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.IReadOnlyList\u003CTestMetadata\u003E\u003E CollectTestsAsync(string sessionId)\r\n\t{\r\n\t\treturn await Tests0(sessionId);\r\n\t}\r\n\r\n\tprivate async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003CTestMetadata\u003E\u003E Tests0(string sessionId)\r\n\t{\r\n\t\tglobal::System.Collections.Generic.List\u003CTestMetadata\u003E nodes = [];\r\n\t\tvar classDataIndex = 0;\r\n\t\tvar testMethodDataIndex = 0;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tvar testInformation = new global::TUnit.Core.TestMethod\r\n\t\t\t{\r\n\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\tName = \u0022AsyncMethodDataSource_ExternalClass\u0022,\r\n\t\t\t\tGenericTypeCount = 0,\r\n\t\t\t\tReturnType = typeof(global::System.Threading.Tasks.Task),\r\n\t\t\t\tAttributes = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestAttribute(),\r\n\r\n\t\t\t\t\tnew global::TUnit.Core.MethodDataSourceAttribute(typeof(global::TUnit.TestProject.AsyncExternalDataSource), \u0022GetData\u0022)\r\n\t\t\t\t],\r\n\t\t\t\tParameters = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestParameter\u003Cstring\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022value\u0022,\r\n\t\t\t\t\t\tAttributes = [],\r\n\t\t\t\t\t\tReflectionInfo = null!,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tClass = global::TUnit.Core.TestClass.GetOrAdd(\u0022global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestClass\r\n\t\t\t\t{\r\n\t\t\t\t\tParent = null,\r\n\t\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\t\tAssembly = global::TUnit.Core.TestAssembly.GetOrAdd(\u0022AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestAssembly\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\t\tAttributes = \r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute()\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\tNamespace = \u0022TUnit.TestProject\u0022,\r\n\t\t\t\t\tAttributes = \r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass)\r\n\t\t\t\t\t],\r\n\t\t\t\t\tParameters = [],\r\n\t\t\t\t\tProperties = [],\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\r\n\r\n\t\t\tvar testBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t{\r\n\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_ExternalClass\u0022,\r\n\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\tMethodInformation = testInformation\t\t\t};\r\n\t\t\tvar testBuilderContextAccessor = new global::TUnit.Core.TestBuilderContextAccessor(testBuilderContext);\r\n\t\t\tglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests? classInstance = null;\r\n\t\t\tobject?[]? classInstanceArguments = null;\r\n\t\t\tforeach (var methodDataAccessor in global::TUnit.TestProject.AsyncExternalDataSource.GetData())\r\n\t\t\t{\r\n\t\t\t\ttestMethodDataIndex\u002B\u002B;\r\n\t\t\t\tclassInstanceArguments = [];\r\n\r\n\t\t\t\tvar methodData = methodDataAccessor;\r\n\t\t\t\tvar resettableClassFactoryDelegate = () =\u003E new ResettableLazy\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E(() =\u003E new global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests(), sessionId, testBuilderContext);\r\n\t\t\t\tvar resettableClassFactory = resettableClassFactoryDelegate();\r\n\r\n\r\n\t\t\t\tnodes.Add(new TestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t\t{\r\n\t\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_ExternalClass(string):0\u0022,\r\n\t\t\t\t\tTestClassArguments = [],\r\n\t\t\t\t\tTestMethodArguments = [methodData],\r\n\t\t\t\t\tTestClassProperties = new global::System.Collections.Generic.Dictionary\u003Cstring, object?\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t},\r\n\t\t\t\t\tCurrentRepeatAttempt = 0,\r\n\t\t\t\t\tRepeatLimit = 0,\r\n\t\t\t\t\tResettableClassFactory = resettableClassFactory,\r\n\t\t\t\t\tTestMethodFactory = (classInstance, cancellationToken) =\u003E AsyncConvert.Convert(() =\u003E classInstance.AsyncMethodDataSource_ExternalClass(methodData)),\r\n\t\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\t\tTestLineNumber = 46,\r\n\t\t\t\t\tTestMethod = testInformation,\r\n\t\t\t\t\tTestBuilderContext = testBuilderContext,\r\n\t\t\t\t});\r\n\t\t\t\tresettableClassFactory = resettableClassFactoryDelegate();\r\n\t\t\t\ttestBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t\t{\r\n\t\t\t\t\tTestMethodName = \u0022AsyncMethodDataSource_ExternalClass\u0022,\r\n\t\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\t\tMethodInformation = testInformation\t\t\t\t};\r\n\t\t\t\ttestBuilderContextAccessor.Current = testBuilderContext;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (global::System.Exception exception)\r\n\t\t{\r\n\t\t\tnodes.Add(new FailedTestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t{\r\n\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_ExternalClass(string):0\u0022,\r\n\t\t\t\tMethodName = $\u0022AsyncMethodDataSource_ExternalClass\u0022,\r\n\t\t\t\tException = new TUnit.Core.Exceptions.TestFailedInitializationException(\u0022AsyncMethodDataSourceDrivenTests.AsyncMethodDataSource_ExternalClass failed to initialize\u0022, exception),\r\n\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\tTestLineNumber = 46,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn nodes;\r\n\t}\r\n\r\n}",
  "// \u003Cauto-generated/\u003E\r\n#pragma warning disable\r\nusing global::System.Linq;\r\nusing global::System.Reflection;\r\nusing global::TUnit.Core;\r\nusing global::TUnit.Core.Extensions;\r\n\r\nnamespace TUnit.SourceGenerated;\r\n\r\n[global::System.Diagnostics.StackTraceHidden]\r\n[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\r\n[System.CodeDom.Compiler.GeneratedCode(\u0022TUnit\u0022, \u00221.0.0.0\u0022)]\r\nfile partial class AsyncMethodDataSourceDrivenTests : global::TUnit.Core.Interfaces.SourceGenerator.ITestSource\r\n{\r\n\t[global::System.Runtime.CompilerServices.ModuleInitializer]\r\n\tpublic static void Initialise()\r\n\t{\r\n\t\tglobal::TUnit.Core.SourceRegistrar.Register(new AsyncMethodDataSourceDrivenTests());\r\n\t}\r\n\r\n\tpublic async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.IReadOnlyList\u003CTestMetadata\u003E\u003E CollectTestsAsync(string sessionId)\r\n\t{\r\n\t\treturn await Tests0(sessionId);\r\n\t}\r\n\r\n\tprivate async global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003CTestMetadata\u003E\u003E Tests0(string sessionId)\r\n\t{\r\n\t\tglobal::System.Collections.Generic.List\u003CTestMetadata\u003E nodes = [];\r\n\t\tvar classDataIndex = 0;\r\n\t\tvar testMethodDataIndex = 0;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tvar testInformation = new global::TUnit.Core.TestMethod\r\n\t\t\t{\r\n\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\tName = \u0022ValueTaskMethodDataSource_SingleValue\u0022,\r\n\t\t\t\tGenericTypeCount = 0,\r\n\t\t\t\tReturnType = typeof(global::System.Threading.Tasks.Task),\r\n\t\t\t\tAttributes = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestAttribute(),\r\n\r\n\t\t\t\t\tnew global::TUnit.Core.MethodDataSourceAttribute(\u0022ValueTaskDataMethod\u0022)\r\n\t\t\t\t],\r\n\t\t\t\tParameters = \r\n\t\t\t\t[\r\n\t\t\t\t\tnew global::TUnit.Core.TestParameter\u003Cint\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022value\u0022,\r\n\t\t\t\t\t\tAttributes = [],\r\n\t\t\t\t\t\tReflectionInfo = null!,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tClass = global::TUnit.Core.TestClass.GetOrAdd(\u0022global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestClass\r\n\t\t\t\t{\r\n\t\t\t\t\tParent = null,\r\n\t\t\t\t\tType = typeof(global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests),\r\n\t\t\t\t\tAssembly = global::TUnit.Core.TestAssembly.GetOrAdd(\u0022AsyncMethodDataSourceDrivenTests\u0022, () =\u003E new global::TUnit.Core.TestAssembly\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\t\tAttributes = \r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute()\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tName = \u0022AsyncMethodDataSourceDrivenTests\u0022,\r\n\t\t\t\t\tNamespace = \u0022TUnit.TestProject\u0022,\r\n\t\t\t\t\tAttributes = \r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tnew global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass)\r\n\t\t\t\t\t],\r\n\t\t\t\t\tParameters = [],\r\n\t\t\t\t\tProperties = [],\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\r\n\r\n\t\t\tvar testBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t{\r\n\t\t\t\tTestMethodName = \u0022ValueTaskMethodDataSource_SingleValue\u0022,\r\n\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\tMethodInformation = testInformation\t\t\t};\r\n\t\t\tvar testBuilderContextAccessor = new global::TUnit.Core.TestBuilderContextAccessor(testBuilderContext);\r\n\t\t\tglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests? classInstance = null;\r\n\t\t\tobject?[]? classInstanceArguments = null;\r\n\t\t\tforeach (var methodDataAccessor in global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests.ValueTaskDataMethod())\r\n\t\t\t{\r\n\t\t\t\ttestMethodDataIndex\u002B\u002B;\r\n\t\t\t\tclassInstanceArguments = [];\r\n\r\n\t\t\t\tvar methodData = methodDataAccessor;\r\n\t\t\t\tvar resettableClassFactoryDelegate = () =\u003E new ResettableLazy\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E(() =\u003E new global::TUnit.TestProject.AsyncMethodDataSourceDrivenTests(), sessionId, testBuilderContext);\r\n\t\t\t\tvar resettableClassFactory = resettableClassFactoryDelegate();\r\n\r\n\r\n\t\t\t\tnodes.Add(new TestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t\t{\r\n\t\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.ValueTaskMethodDataSource_SingleValue(int):0\u0022,\r\n\t\t\t\t\tTestClassArguments = [],\r\n\t\t\t\t\tTestMethodArguments = [methodData],\r\n\t\t\t\t\tTestClassProperties = new global::System.Collections.Generic.Dictionary\u003Cstring, object?\u003E\r\n\t\t\t\t\t{\r\n\t\t\t\t\t},\r\n\t\t\t\t\tCurrentRepeatAttempt = 0,\r\n\t\t\t\t\tRepeatLimit = 0,\r\n\t\t\t\t\tResettableClassFactory = resettableClassFactory,\r\n\t\t\t\t\tTestMethodFactory = (classInstance, cancellationToken) =\u003E AsyncConvert.Convert(() =\u003E classInstance.ValueTaskMethodDataSource_SingleValue(methodData)),\r\n\t\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\t\tTestLineNumber = 53,\r\n\t\t\t\t\tTestMethod = testInformation,\r\n\t\t\t\t\tTestBuilderContext = testBuilderContext,\r\n\t\t\t\t});\r\n\t\t\t\tresettableClassFactory = resettableClassFactoryDelegate();\r\n\t\t\t\ttestBuilderContext = new global::TUnit.Core.TestBuilderContext\r\n\t\t\t\t{\r\n\t\t\t\t\tTestMethodName = \u0022ValueTaskMethodDataSource_SingleValue\u0022,\r\n\t\t\t\t\tClassInformation = testInformation.Class,\r\n\t\t\t\t\tMethodInformation = testInformation\t\t\t\t};\r\n\t\t\t\ttestBuilderContextAccessor.Current = testBuilderContext;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (global::System.Exception exception)\r\n\t\t{\r\n\t\t\tnodes.Add(new FailedTestMetadata\u003Cglobal::TUnit.TestProject.AsyncMethodDataSourceDrivenTests\u003E\r\n\t\t\t{\r\n\t\t\t\tTestId = $\u0022global::TUnit.Core.MethodDataSourceAttribute:{testMethodDataIndex}:TL-EMDS0:{testMethodDataIndex}:TUnit.TestProject.AsyncMethodDataSourceDrivenTests.ValueTaskMethodDataSource_SingleValue(int):0\u0022,\r\n\t\t\t\tMethodName = $\u0022ValueTaskMethodDataSource_SingleValue\u0022,\r\n\t\t\t\tException = new TUnit.Core.Exceptions.TestFailedInitializationException(\u0022AsyncMethodDataSourceDrivenTests.ValueTaskMethodDataSource_SingleValue failed to initialize\u0022, exception),\r\n\t\t\t\tTestFilePath = @\u0022\u0022,\r\n\t\t\t\tTestLineNumber = 53,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn nodes;\r\n\t}\r\n\r\n}"
]