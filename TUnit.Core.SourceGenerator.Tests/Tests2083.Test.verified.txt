// <auto-generated/>
#pragma warning disable

#nullable enable
#pragma warning disable CS9113 // Parameter is unread.
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Threading.Tasks;
using global::TUnit.Core;
using global::TUnit.Core.SourceGenerator;
namespace TUnit.Generated;
internal static class TestMetadataRegistry_TUnit_TestProject_Bugs__2083_Tests_MyTest_925e4ca184084f46b2a129dbb3cf85d1
{
    [System.Runtime.CompilerServices.ModuleInitializer]
    public static void Initialize()
    {
        try
        {
            var testDescriptors = new System.Collections.Generic.List<ITestDescriptor>();
            var staticDef_0 = new StaticTestDefinition
            {
                TestId = "TUnit.TestProject.Bugs._2083.Tests.MyTest_0_{{TestIndex}}",
                DisplayName = "MyTest",
                TestFilePath = @"",
                TestLineNumber = 8,
                IsAsync = false,
                IsSkipped = false,
                SkipReason = null,
                Timeout = null,
                RepeatCount = 1,
                TestClassType = typeof(TUnit.TestProject.Bugs._2083.Tests),
                TestMethodMetadata = new global::TUnit.Core.MethodMetadata{Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Name = "MyTest",GenericTypeCount = 0,ReturnType = typeof(void),ReturnTypeReference = global::TUnit.Core.TypeReference.CreateConcrete("void, System.Private.CoreLib"),Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.TestAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { "", 8, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(0), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 0 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(255), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 255 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(32767), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 32767 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute('\uffff'), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { '\uffff' }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(2147483647), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 2147483647 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(9223372036854775807L), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 9223372036854775807 }, }, }
],Parameters = [new global::TUnit.Core.ParameterMetadata<long>{Name = "value",TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("long, System.Private.CoreLib"),Attributes = [],ReflectionInfo = null!,},],Class = global::TUnit.Core.ClassMetadata.GetOrAdd("global::TUnit.TestProject.Bugs._2083.Tests", () => new global::TUnit.Core.ClassMetadata{Parent = null,Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Assembly = global::TUnit.Core.AssemblyMetadata.GetOrAdd("TestsBase`1", () => new global::TUnit.Core.AssemblyMetadata{Name = "TestsBase`1",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Assembly, TargetMemberName = "TestsBase`1", }
],}),Name = "Tests",Namespace = "TUnit.TestProject.Bugs._2083",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass), TargetElement = global::TUnit.Core.TestAttributeTarget.Class, TargetMemberName = "Tests", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { (global::TUnit.TestProject.Attributes.ExpectedResult)(0), }, }
],Parameters = [],Properties = [],}),},
                ClassFactory = args => new TUnit.TestProject.Bugs._2083.Tests(),
                MethodInvoker = async (instance, args, cancellationToken) => ((TUnit.TestProject.Bugs._2083.Tests)instance).MyTest(TUnit.Core.Helpers.CastHelper.Cast<long>(args[0])),
                PropertyValuesProvider = () => new[] { new System.Collections.Generic.Dictionary<string, object?>() },
                ClassDataProvider = new TUnit.Core.EmptyDataProvider(),
                MethodDataProvider = new TUnit.Core.ArgumentsDataProvider(0)
            };
            testDescriptors.Add(staticDef_0);
            var staticDef_1 = new StaticTestDefinition
            {
                TestId = "TUnit.TestProject.Bugs._2083.Tests.MyTest_1_{{TestIndex}}",
                DisplayName = "MyTest",
                TestFilePath = @"",
                TestLineNumber = 8,
                IsAsync = false,
                IsSkipped = false,
                SkipReason = null,
                Timeout = null,
                RepeatCount = 1,
                TestClassType = typeof(TUnit.TestProject.Bugs._2083.Tests),
                TestMethodMetadata = new global::TUnit.Core.MethodMetadata{Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Name = "MyTest",GenericTypeCount = 0,ReturnType = typeof(void),ReturnTypeReference = global::TUnit.Core.TypeReference.CreateConcrete("void, System.Private.CoreLib"),Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.TestAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { "", 8, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(0), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 0 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(255), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 255 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(32767), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 32767 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute('\uffff'), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { '\uffff' }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(2147483647), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 2147483647 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(9223372036854775807L), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 9223372036854775807 }, }, }
],Parameters = [new global::TUnit.Core.ParameterMetadata<long>{Name = "value",TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("long, System.Private.CoreLib"),Attributes = [],ReflectionInfo = null!,},],Class = global::TUnit.Core.ClassMetadata.GetOrAdd("global::TUnit.TestProject.Bugs._2083.Tests", () => new global::TUnit.Core.ClassMetadata{Parent = null,Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Assembly = global::TUnit.Core.AssemblyMetadata.GetOrAdd("TestsBase`1", () => new global::TUnit.Core.AssemblyMetadata{Name = "TestsBase`1",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Assembly, TargetMemberName = "TestsBase`1", }
],}),Name = "Tests",Namespace = "TUnit.TestProject.Bugs._2083",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass), TargetElement = global::TUnit.Core.TestAttributeTarget.Class, TargetMemberName = "Tests", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { (global::TUnit.TestProject.Attributes.ExpectedResult)(0), }, }
],Parameters = [],Properties = [],}),},
                ClassFactory = args => new TUnit.TestProject.Bugs._2083.Tests(),
                MethodInvoker = async (instance, args, cancellationToken) => ((TUnit.TestProject.Bugs._2083.Tests)instance).MyTest(TUnit.Core.Helpers.CastHelper.Cast<long>(args[0])),
                PropertyValuesProvider = () => new[] { new System.Collections.Generic.Dictionary<string, object?>() },
                ClassDataProvider = new TUnit.Core.EmptyDataProvider(),
                MethodDataProvider = new TUnit.Core.ArgumentsDataProvider(255)
            };
            testDescriptors.Add(staticDef_1);
            var staticDef_2 = new StaticTestDefinition
            {
                TestId = "TUnit.TestProject.Bugs._2083.Tests.MyTest_2_{{TestIndex}}",
                DisplayName = "MyTest",
                TestFilePath = @"",
                TestLineNumber = 8,
                IsAsync = false,
                IsSkipped = false,
                SkipReason = null,
                Timeout = null,
                RepeatCount = 1,
                TestClassType = typeof(TUnit.TestProject.Bugs._2083.Tests),
                TestMethodMetadata = new global::TUnit.Core.MethodMetadata{Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Name = "MyTest",GenericTypeCount = 0,ReturnType = typeof(void),ReturnTypeReference = global::TUnit.Core.TypeReference.CreateConcrete("void, System.Private.CoreLib"),Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.TestAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { "", 8, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(0), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 0 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(255), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 255 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(32767), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 32767 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute('\uffff'), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { '\uffff' }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(2147483647), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 2147483647 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(9223372036854775807L), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 9223372036854775807 }, }, }
],Parameters = [new global::TUnit.Core.ParameterMetadata<long>{Name = "value",TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("long, System.Private.CoreLib"),Attributes = [],ReflectionInfo = null!,},],Class = global::TUnit.Core.ClassMetadata.GetOrAdd("global::TUnit.TestProject.Bugs._2083.Tests", () => new global::TUnit.Core.ClassMetadata{Parent = null,Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Assembly = global::TUnit.Core.AssemblyMetadata.GetOrAdd("TestsBase`1", () => new global::TUnit.Core.AssemblyMetadata{Name = "TestsBase`1",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Assembly, TargetMemberName = "TestsBase`1", }
],}),Name = "Tests",Namespace = "TUnit.TestProject.Bugs._2083",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass), TargetElement = global::TUnit.Core.TestAttributeTarget.Class, TargetMemberName = "Tests", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { (global::TUnit.TestProject.Attributes.ExpectedResult)(0), }, }
],Parameters = [],Properties = [],}),},
                ClassFactory = args => new TUnit.TestProject.Bugs._2083.Tests(),
                MethodInvoker = async (instance, args, cancellationToken) => ((TUnit.TestProject.Bugs._2083.Tests)instance).MyTest(TUnit.Core.Helpers.CastHelper.Cast<long>(args[0])),
                PropertyValuesProvider = () => new[] { new System.Collections.Generic.Dictionary<string, object?>() },
                ClassDataProvider = new TUnit.Core.EmptyDataProvider(),
                MethodDataProvider = new TUnit.Core.ArgumentsDataProvider(32767)
            };
            testDescriptors.Add(staticDef_2);
            var staticDef_3 = new StaticTestDefinition
            {
                TestId = "TUnit.TestProject.Bugs._2083.Tests.MyTest_3_{{TestIndex}}",
                DisplayName = "MyTest",
                TestFilePath = @"",
                TestLineNumber = 8,
                IsAsync = false,
                IsSkipped = false,
                SkipReason = null,
                Timeout = null,
                RepeatCount = 1,
                TestClassType = typeof(TUnit.TestProject.Bugs._2083.Tests),
                TestMethodMetadata = new global::TUnit.Core.MethodMetadata{Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Name = "MyTest",GenericTypeCount = 0,ReturnType = typeof(void),ReturnTypeReference = global::TUnit.Core.TypeReference.CreateConcrete("void, System.Private.CoreLib"),Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.TestAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { "", 8, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(0), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 0 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(255), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 255 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(32767), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 32767 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute('\uffff'), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { '\uffff' }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(2147483647), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 2147483647 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(9223372036854775807L), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 9223372036854775807 }, }, }
],Parameters = [new global::TUnit.Core.ParameterMetadata<long>{Name = "value",TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("long, System.Private.CoreLib"),Attributes = [],ReflectionInfo = null!,},],Class = global::TUnit.Core.ClassMetadata.GetOrAdd("global::TUnit.TestProject.Bugs._2083.Tests", () => new global::TUnit.Core.ClassMetadata{Parent = null,Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Assembly = global::TUnit.Core.AssemblyMetadata.GetOrAdd("TestsBase`1", () => new global::TUnit.Core.AssemblyMetadata{Name = "TestsBase`1",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Assembly, TargetMemberName = "TestsBase`1", }
],}),Name = "Tests",Namespace = "TUnit.TestProject.Bugs._2083",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass), TargetElement = global::TUnit.Core.TestAttributeTarget.Class, TargetMemberName = "Tests", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { (global::TUnit.TestProject.Attributes.ExpectedResult)(0), }, }
],Parameters = [],Properties = [],}),},
                ClassFactory = args => new TUnit.TestProject.Bugs._2083.Tests(),
                MethodInvoker = async (instance, args, cancellationToken) => ((TUnit.TestProject.Bugs._2083.Tests)instance).MyTest(TUnit.Core.Helpers.CastHelper.Cast<long>(args[0])),
                PropertyValuesProvider = () => new[] { new System.Collections.Generic.Dictionary<string, object?>() },
                ClassDataProvider = new TUnit.Core.EmptyDataProvider(),
                MethodDataProvider = new TUnit.Core.ArgumentsDataProvider('\uffff')
            };
            testDescriptors.Add(staticDef_3);
            var staticDef_4 = new StaticTestDefinition
            {
                TestId = "TUnit.TestProject.Bugs._2083.Tests.MyTest_4_{{TestIndex}}",
                DisplayName = "MyTest",
                TestFilePath = @"",
                TestLineNumber = 8,
                IsAsync = false,
                IsSkipped = false,
                SkipReason = null,
                Timeout = null,
                RepeatCount = 1,
                TestClassType = typeof(TUnit.TestProject.Bugs._2083.Tests),
                TestMethodMetadata = new global::TUnit.Core.MethodMetadata{Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Name = "MyTest",GenericTypeCount = 0,ReturnType = typeof(void),ReturnTypeReference = global::TUnit.Core.TypeReference.CreateConcrete("void, System.Private.CoreLib"),Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.TestAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { "", 8, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(0), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 0 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(255), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 255 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(32767), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 32767 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute('\uffff'), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { '\uffff' }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(2147483647), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 2147483647 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(9223372036854775807L), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 9223372036854775807 }, }, }
],Parameters = [new global::TUnit.Core.ParameterMetadata<long>{Name = "value",TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("long, System.Private.CoreLib"),Attributes = [],ReflectionInfo = null!,},],Class = global::TUnit.Core.ClassMetadata.GetOrAdd("global::TUnit.TestProject.Bugs._2083.Tests", () => new global::TUnit.Core.ClassMetadata{Parent = null,Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Assembly = global::TUnit.Core.AssemblyMetadata.GetOrAdd("TestsBase`1", () => new global::TUnit.Core.AssemblyMetadata{Name = "TestsBase`1",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Assembly, TargetMemberName = "TestsBase`1", }
],}),Name = "Tests",Namespace = "TUnit.TestProject.Bugs._2083",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass), TargetElement = global::TUnit.Core.TestAttributeTarget.Class, TargetMemberName = "Tests", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { (global::TUnit.TestProject.Attributes.ExpectedResult)(0), }, }
],Parameters = [],Properties = [],}),},
                ClassFactory = args => new TUnit.TestProject.Bugs._2083.Tests(),
                MethodInvoker = async (instance, args, cancellationToken) => ((TUnit.TestProject.Bugs._2083.Tests)instance).MyTest(TUnit.Core.Helpers.CastHelper.Cast<long>(args[0])),
                PropertyValuesProvider = () => new[] { new System.Collections.Generic.Dictionary<string, object?>() },
                ClassDataProvider = new TUnit.Core.EmptyDataProvider(),
                MethodDataProvider = new TUnit.Core.ArgumentsDataProvider(2147483647)
            };
            testDescriptors.Add(staticDef_4);
            var staticDef_5 = new StaticTestDefinition
            {
                TestId = "TUnit.TestProject.Bugs._2083.Tests.MyTest_5_{{TestIndex}}",
                DisplayName = "MyTest",
                TestFilePath = @"",
                TestLineNumber = 8,
                IsAsync = false,
                IsSkipped = false,
                SkipReason = null,
                Timeout = null,
                RepeatCount = 1,
                TestClassType = typeof(TUnit.TestProject.Bugs._2083.Tests),
                TestMethodMetadata = new global::TUnit.Core.MethodMetadata{Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Name = "MyTest",GenericTypeCount = 0,ReturnType = typeof(void),ReturnTypeReference = global::TUnit.Core.TypeReference.CreateConcrete("void, System.Private.CoreLib"),Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.TestAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { "", 8, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(0), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 0 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(255), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 255 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(32767), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 32767 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute('\uffff'), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { '\uffff' }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(2147483647), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 2147483647 }, }, },
new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.Core.ArgumentsAttribute(9223372036854775807L), TargetElement = global::TUnit.Core.TestAttributeTarget.Method, TargetMemberName = "MyTest", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { new object[] { 9223372036854775807 }, }, }
],Parameters = [new global::TUnit.Core.ParameterMetadata<long>{Name = "value",TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("long, System.Private.CoreLib"),Attributes = [],ReflectionInfo = null!,},],Class = global::TUnit.Core.ClassMetadata.GetOrAdd("global::TUnit.TestProject.Bugs._2083.Tests", () => new global::TUnit.Core.ClassMetadata{Parent = null,Type = typeof(global::TUnit.TestProject.Bugs._2083.Tests),TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),Assembly = global::TUnit.Core.AssemblyMetadata.GetOrAdd("TestsBase`1", () => new global::TUnit.Core.AssemblyMetadata{Name = "TestsBase`1",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.ClassDisplayNameAttribute(), TargetElement = global::TUnit.Core.TestAttributeTarget.Assembly, TargetMemberName = "TestsBase`1", }
],}),Name = "Tests",Namespace = "TUnit.TestProject.Bugs._2083",Attributes = [new global::TUnit.Core.AttributeMetadata { Instance = new global::TUnit.TestProject.Attributes.EngineTest(global::TUnit.TestProject.Attributes.ExpectedResult.Pass), TargetElement = global::TUnit.Core.TestAttributeTarget.Class, TargetMemberName = "Tests", TargetType = typeof(TUnit.TestProject.Bugs._2083.Tests), ConstructorArguments = new object?[] { (global::TUnit.TestProject.Attributes.ExpectedResult)(0), }, }
],Parameters = [],Properties = [],}),},
                ClassFactory = args => new TUnit.TestProject.Bugs._2083.Tests(),
                MethodInvoker = async (instance, args, cancellationToken) => ((TUnit.TestProject.Bugs._2083.Tests)instance).MyTest(TUnit.Core.Helpers.CastHelper.Cast<long>(args[0])),
                PropertyValuesProvider = () => new[] { new System.Collections.Generic.Dictionary<string, object?>() },
                ClassDataProvider = new TUnit.Core.EmptyDataProvider(),
                MethodDataProvider = new TUnit.Core.ArgumentsDataProvider(9223372036854775807)
            };
            testDescriptors.Add(staticDef_5);
            TestSourceRegistrar.RegisterTests(testDescriptors);
        }
        catch (System.Exception ex)
        {
            // Runtime initialization failed - generate minimal metadata that will report the error
            // Note: We can't call external methods here as this is in the module initializer
            // So we need to generate the failure metadata inline
            var errorMessage = "Runtime initialization failed: " + ex.GetType().Name + ": " + ex.Message;
            var testDescriptors = new System.Collections.Generic.List<ITestDescriptor>();
            var failureDef = new StaticTestDefinition
            {
                TestId = "TUnit.TestProject.Bugs._2083.Tests.MyTest_RuntimeFailure_{{TestIndex}}",
                DisplayName = "MyTest [RUNTIME INITIALIZATION FAILED]",
                TestFilePath = @"",
                TestLineNumber = 8,
                IsAsync = true,
                IsSkipped = false,
                SkipReason = null,
                Timeout = null,
                RepeatCount = 1,
                TestClassType = typeof(TUnit.TestProject.Bugs._2083.Tests),
                TestMethodMetadata = new global::TUnit.Core.MethodMetadata
{
Type = typeof(TUnit.TestProject.Bugs._2083.Tests),
TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),
Name = "MyTest_RuntimeFailure",
GenericTypeCount = 0,
ReturnType = typeof(global::System.Threading.Tasks.Task),
ReturnTypeReference = global::TUnit.Core.TypeReference.CreateConcrete("System.Threading.Tasks.Task, System.Private.CoreLib"),
Attributes = new global::TUnit.Core.AttributeMetadata[] { },
Parameters = new global::TUnit.Core.ParameterMetadata[] { },
Class = new global::TUnit.Core.ClassMetadata
{
Name = "Tests",
Type = typeof(TUnit.TestProject.Bugs._2083.Tests),
TypeReference = global::TUnit.Core.TypeReference.CreateConcrete("TUnit.TestProject.Bugs._2083.Tests, TestsBase`1"),
Namespace = "TUnit.TestProject.Bugs._2083",
Attributes = new global::TUnit.Core.AttributeMetadata[] { },
Properties = new global::TUnit.Core.PropertyMetadata[] { },
Parameters = new global::TUnit.Core.ParameterMetadata[] { },
Parent = null,
Assembly = new global::TUnit.Core.AssemblyMetadata
{
    Name = "TestsBase`1",
    Attributes = new global::TUnit.Core.AttributeMetadata[] { }
}
},
ReflectionInformation = null
},
                ClassFactory = args => throw new InvalidOperationException(errorMessage),
                MethodInvoker = async (instance, args, cancellationToken) => { await Task.CompletedTask; throw new InvalidOperationException(errorMessage); },
                PropertyValuesProvider = () => new[] { new System.Collections.Generic.Dictionary<string, object?>() },
                ClassDataProvider = new TUnit.Core.EmptyDataProvider(),
                MethodDataProvider = new TUnit.Core.EmptyDataProvider()
            };
            testDescriptors.Add(failureDef);
            TestSourceRegistrar.RegisterTests(testDescriptors);
        }
    }
}
