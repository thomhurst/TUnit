[  
// <auto-generated/>
#pragma warning disable
using global::System.Linq;
using global::System.Reflection;
using global::TUnit.Core;
using global::TUnit.Core.Extensions;

namespace TUnit.SourceGenerated;

[global::System.Diagnostics.StackTraceHidden]
[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
file partial class Basic : global::TUnit.Core.Interfaces.SourceGenerator.IDynamicTestSource
{
	[global::System.Runtime.CompilerServices.ModuleInitializer]
	public static void Initialise()
	{
		global::TUnit.Core.SourceRegistrar.RegisterDynamic(new Basic());
	}
	public global::System.Collections.Generic.IReadOnlyList<DynamicTest> CollectDynamicTests(string sessionId)
	{
		try
		{
			var context = new global::TUnit.Core.DynamicTestBuilderContext(@"", 43);
			new global::TUnit.TestProject.DynamicTests.Basic().BuildTests(context);
			return context.Tests;
		}
		catch (global::System.Exception exception)
		{
			return
			[
				new FailedDynamicTest<global::TUnit.TestProject.DynamicTests.Basic>
				{
					TestId = @"global::TUnit.TestProject.DynamicTests.BasicBuildTests",
					MethodName = $"BuildTests",
					Exception = new TUnit.Core.Exceptions.TestFailedInitializationException("Basic.BuildTests failed to initialize", exception),
					TestFilePath = @"",
					TestLineNumber = 43,
				}
			];
		}
	}
}

]