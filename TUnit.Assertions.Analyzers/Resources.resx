<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="TUnitAssertions0001Description" xml:space="preserve">
        <value>Mixing 'Or' and 'And' operators in assertions can create ambiguous logic. Use parentheses to clarify operator precedence and make the assertion intent clear.</value>
    </data>
    <data name="TUnitAssertions0001MessageFormat" xml:space="preserve">
        <value>Don't mix 'Or' &amp; 'And' operators in assertions - use parentheses to clarify precedence</value>
    </data>
    <data name="TUnitAssertions0001Title" xml:space="preserve">
        <value>Mixed 'Or' and 'And' operators in assertion</value>
    </data>
    <data name="TUnitAssertions0001CodeFixTitle" xml:space="preserve">
        <value>Don't mix 'Or' &amp; 'And' operators in assertions</value><comment>The title of the code fix.</comment>
    </data>
    <data name="TUnitAssertions0002Description" xml:space="preserve">
        <value>All TUnit assertions return Task and must be awaited. Add 'await' before the assertion statement.</value>
    </data>
    <data name="TUnitAssertions0002MessageFormat" xml:space="preserve">
        <value>Assert statements must be awaited - all TUnit assertions return Task</value>
    </data>
    <data name="TUnitAssertions0002Title" xml:space="preserve">
        <value>Assert statement not awaited</value>
    </data>
    <data name="TUnitAssertions0002CodeFixTitle" xml:space="preserve">
        <value>Assert statements must be awaited</value><comment>The title of the code fix.</comment>
    </data>
    <data name="TUnitAssertions0003Description" xml:space="preserve">
        <value>CallerArgumentExpression parameters are automatically populated by the compiler. Remove manually provided values to allow proper expression capture.</value>
    </data>
    <data name="TUnitAssertions0003MessageFormat" xml:space="preserve">
        <value>Don't provide CallerArgumentExpression parameter values - let the compiler handle it</value>
    </data>
    <data name="TUnitAssertions0003Title" xml:space="preserve">
        <value>Manual CallerArgumentExpression parameter provided</value>
    </data>
    <data name="TUnitAssertions0004Description" xml:space="preserve">
        <value>Assert.Multiple needs a `using` before it.</value>
    </data>
    <data name="TUnitAssertions0004MessageFormat" xml:space="preserve">
        <value>Assert.Multiple needs a `using` before it</value>
    </data>
    <data name="TUnitAssertions0004Title" xml:space="preserve">
        <value>Assert.Multiple needs a `using` before it</value>
    </data>
    <data name="TUnitAssertions0005Description" xml:space="preserve">
        <value>Assert.That(...) should not be used with a constant value.</value>
    </data>
    <data name="TUnitAssertions0005MessageFormat" xml:space="preserve">
        <value>Assert.That(...) should not be used with a constant value</value>
    </data>
    <data name="TUnitAssertions0005Title" xml:space="preserve">
        <value>Assert.That(...) should not be used with a constant value</value>
    </data>
    <data name="TUnitAssertions0006Description" xml:space="preserve">
        <value>Object `Equals` base method should not be called. Use `.IsEqualTo(...).</value>
    </data>
    <data name="TUnitAssertions0006MessageFormat" xml:space="preserve">
        <value>Object `Equals` base method should not be called. Use `.IsEqualTo(...)</value>
    </data>
    <data name="TUnitAssertions0006Title" xml:space="preserve">
        <value>Object `Equals` base method should not be called</value>
    </data>
    <data name="TUnitAssertions0007Description" xml:space="preserve">
        <value>Cast dynamic values to `object?` when using Assert.That(...).</value>
    </data>
    <data name="TUnitAssertions0007MessageFormat" xml:space="preserve">
        <value>Cast dynamic values to `object?` when using Assert.That(...)</value>
    </data>
    <data name="TUnitAssertions0007Title" xml:space="preserve">
        <value>Cast dynamic values to `object?` when using Assert.That(...)</value>
    </data>
    <data name="TUnitAssertions0008Description" xml:space="preserve">
        <value>ValueTasks should be awaited when used within Assert.That(...).</value>
    </data>
    <data name="TUnitAssertions0008MessageFormat" xml:space="preserve">
        <value>ValueTasks should be awaited when used within Assert.That(...)</value>
    </data>
    <data name="TUnitAssertions0008Title" xml:space="preserve">
        <value>ValueTasks should be awaited when used within Assert.That(...)</value>
    </data>
    <data name="TUnitAssertions0009Description" xml:space="preserve">
        <value>xUnit assertion can be converted to TUnit assertion.</value>
    </data>
    <data name="TUnitAssertions0009MessageFormat" xml:space="preserve">
        <value>xUnit assertion can be converted to TUnit assertion</value>
    </data>
    <data name="TUnitAssertions0009Title" xml:space="preserve">
        <value>xUnit assertion can be converted to TUnit assertion</value>
    </data>
</root>