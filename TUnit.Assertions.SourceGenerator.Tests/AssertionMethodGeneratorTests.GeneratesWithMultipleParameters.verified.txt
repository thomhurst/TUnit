#nullable disable

using System;
using System.Threading.Tasks;
using TUnit.Assertions.AssertConditions;
using TUnit.Assertions.AssertConditions.Interfaces;
using TUnit.Assertions.AssertionBuilders;

namespace TestNamespace;

public class StringPathIsPathRootedAssertCondition : BaseAssertCondition<string>
{
    private readonly bool _negated;

    public StringPathIsPathRootedAssertCondition(bool negated = false)
    {
        _negated = negated;
    }

    protected override ValueTask<AssertionResult> GetResult(string? actualValue, Exception? exception, AssertionMetadata assertionMetadata)
    {
        if (actualValue is null)
        {
            return AssertionResult.Fail("Actual value is null");
        }

        var result = System.IO.Path.IsPathRooted(actualValue);
        var condition = _negated ? result : !result;
        return AssertionResult.FailIf(condition, $"'{actualValue}' was expected {(_negated ? "not " : "")}to satisfy IsPathRooted");
    }

    protected override string GetExpectation()
    {
        return $"{(_negated ? "not " : "")}to satisfy IsPathRooted";
    }
}

public static partial class StringPathAssertions
{
    public static InvokableValueAssertionBuilder<string> IsPathRooted(this IValueSource<string> valueSource)
    {
        return valueSource.RegisterAssertion(
            new StringPathIsPathRootedAssertCondition(false),
            []);
    }

}
