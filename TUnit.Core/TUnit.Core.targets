<?xml version="1.0" encoding="utf-8"?>
<Project>

    <ItemGroup Condition="'$(TUnitImplicitUsings)' == 'true'">
        <Using Include="TUnit.Core.HookType" Static="True" />
        <Using Include="TUnit.Core" />
    </ItemGroup>

    <!-- Auto-include Polyfill package for compile-time type generation -->
    <PropertyGroup>
        <_TUnitPolyfillVersion>8.9.0</_TUnitPolyfillVersion>
        <_TUnitNeedsPolyfill Condition="'$(TargetFramework)' == 'netstandard2.0' or '$(TargetFramework)' == 'netstandard2.1' or '$(TargetFrameworkIdentifier)' == '.NETFramework'">true</_TUnitNeedsPolyfill>
    </PropertyGroup>

    <!-- Add Polyfill for non-CPM projects -->
    <ItemGroup Condition="'$(EnableTUnitPolyfills)' != 'false' and '$(_TUnitNeedsPolyfill)' == 'true' and '$(ManagePackageVersionsCentrally)' != 'true' and '$(_PolyfillAlreadyDefined)' != 'true'">
        <PackageReference Include="Polyfill" Version="$(_TUnitPolyfillVersion)">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>compile; analyzers</IncludeAssets>
            <ExcludeAssets>runtime; native; contentfiles; build; buildtransitive</ExcludeAssets>
        </PackageReference>
    </ItemGroup>

    <!-- Add Polyfill for CPM projects (using VersionOverride to bypass CPM requirement) -->
    <ItemGroup Condition="'$(EnableTUnitPolyfills)' != 'false' and '$(_TUnitNeedsPolyfill)' == 'true' and '$(ManagePackageVersionsCentrally)' == 'true' and '$(_PolyfillAlreadyDefined)' != 'true'">
        <PackageReference Include="Polyfill" VersionOverride="$(_TUnitPolyfillVersion)">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>compile; analyzers</IncludeAssets>
            <ExcludeAssets>runtime; native; contentfiles; build; buildtransitive</ExcludeAssets>
        </PackageReference>
    </ItemGroup>

    <!-- Validate Polyfill availability and provide helpful messages if issues occur -->
    <Target Name="_TUnitEnsurePolyfill"
            BeforeTargets="GenerateBuildDependencyFile"
            Condition="'$(EnableTUnitPolyfills)' != 'false' and '$(_TUnitNeedsPolyfill)' == 'true' and '$(_PolyfillAlreadyDefined)' != 'true'">
        <Warning Condition="!Exists('$(NuGetPackageRoot)polyfill')"
                 Code="TUNIT001"
                 Text="TUnit attempted to automatically add Polyfill package for $(TargetFramework) but it may not be available. If you encounter issues, you can manually add it or disable automatic injection with &lt;EnableTUnitPolyfills&gt;false&lt;/EnableTUnitPolyfills&gt;." />
    </Target>

    <!-- Add System.ValueTuple for .NET Framework targets to support ValueTuple types in TUnit.Core public API -->
    <PropertyGroup>
        <_TUnitSystemValueTupleVersion>4.5.0</_TUnitSystemValueTupleVersion>
        <_TUnitNeedsSystemValueTuple Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">true</_TUnitNeedsSystemValueTuple>
    </PropertyGroup>

    <!-- Add System.ValueTuple for non-CPM projects -->
    <ItemGroup Condition="'$(_TUnitNeedsSystemValueTuple)' == 'true' and '$(ManagePackageVersionsCentrally)' != 'true'">
        <PackageReference Include="System.ValueTuple" Version="$(_TUnitSystemValueTupleVersion)" />
    </ItemGroup>

    <!-- Add System.ValueTuple for CPM projects (using VersionOverride to bypass CPM requirement) -->
    <ItemGroup Condition="'$(_TUnitNeedsSystemValueTuple)' == 'true' and '$(ManagePackageVersionsCentrally)' == 'true'">
        <PackageReference Include="System.ValueTuple" VersionOverride="$(_TUnitSystemValueTupleVersion)" />
    </ItemGroup>

    <!-- Validate System.ValueTuple availability and provide helpful messages if issues occur -->
    <Target Name="_TUnitEnsureSystemValueTuple"
            BeforeTargets="GenerateBuildDependencyFile"
            Condition="'$(_TUnitNeedsSystemValueTuple)' == 'true'">
        <Warning Condition="!Exists('$(NuGetPackageRoot)system.valuetuple')"
                 Code="TUNIT002"
                 Text="TUnit attempted to automatically add System.ValueTuple package for $(TargetFramework) but it may not be available. This package is required for .NET Framework projects. If you encounter runtime errors, you can manually add it with: &lt;PackageReference Include=&quot;System.ValueTuple&quot; Version=&quot;4.5.0&quot; /&gt;" />
    </Target>

</Project>
