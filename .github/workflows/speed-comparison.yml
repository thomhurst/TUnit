name: Speed Comparison

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build-test-artifacts:
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Pull Requests' }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 10.0.x

      - name: Build All Frameworks
        run: |
          dotnet build -c Release -p:TestFramework=TUNIT
          dotnet build -c Release -p:TestFramework=XUNIT3
          dotnet build -c Release -p:TestFramework=NUNIT
          dotnet build -c Release -p:TestFramework=MSTEST
        working-directory: "tools/speed-comparison/UnifiedTests"

      - name: Publish TUnit AOT
        run: |
          dotnet publish -c Release -p:TestFramework=TUNIT -p:Aot=true --runtime ${{ matrix.os == 'windows-latest' && 'win-x64' || matrix.os == 'ubuntu-latest' && 'linux-x64' || 'osx-arm64' }} --output bin/Release-TUNIT-AOT/net10.0
        working-directory: "tools/speed-comparison/UnifiedTests"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v5
        with:
          name: test-builds-${{ matrix.os }}
          path: tools/speed-comparison/UnifiedTests/bin/
          retention-days: 1

  run-time-benchmarks:
    needs: build-test-artifacts
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Pull Requests' }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        class: [DataDrivenTests, AsyncTests, ScaleTests, MatrixTests, LifecycleTests, MassiveParallelTests]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    concurrency:
      group: "speed-comparison-run-time-${{matrix.os}}-${{matrix.class}}"
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 10.0.x

      - name: Download Build Artifacts
        uses: actions/download-artifact@v6
        with:
          name: test-builds-${{ matrix.os }}
          path: tools/speed-comparison/UnifiedTests/bin/

      - name: Set Execute Permissions (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          find tools/speed-comparison/UnifiedTests/bin -type f -name "UnifiedTests" -exec chmod +x {} \; 2>/dev/null || true
          find tools/speed-comparison/UnifiedTests/bin -type f -name "xunit.v3.runner.console" -exec chmod +x {} \; 2>/dev/null || true
        working-directory: ${{ github.workspace }}

      - name: Run Benchmark
        run: dotnet run -c Release --framework net10.0 --allCategories=Runtime
        working-directory: "tools/speed-comparison/Tests.Benchmark"
        env:
          CLASS_NAME: ${{ matrix.class }}

      - name: Upload Markdown
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: ${{ matrix.os }}_markdown_run_time_${{ matrix.class }}
          path: |
            **/BenchmarkDotNet.Artifacts/**


  build-time-benchmarks:
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Pull Requests' }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        # framework: [net8.0, net9.0]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    concurrency:
      group: "speed-comparison-build-time-${{matrix.os}}"
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 10.0.x

      - name: Prepare builds
        run: |
          dotnet restore UnifiedTests/UnifiedTests.csproj
        working-directory: "tools/speed-comparison"

      - name: Run Benchmark
        run: dotnet run -c Release --allCategories=Build --framework net10.0
        working-directory: "tools/speed-comparison/Tests.Benchmark"

      - name: Upload Markdown
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: ${{ matrix.os }}_markdown_build_time
          path: |
            **/BenchmarkDotNet.Artifacts/**

